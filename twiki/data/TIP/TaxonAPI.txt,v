head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2007.11.15.11.24.16;	author RogerHyam;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.20.09.56.59;	author RogerHyam;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.29.09.29.08;	author RogerHyam;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.28.10.35.18;	author RogerHyam;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.25.15.41.04;	author RogerHyam;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.25.11.06.17;	author RogerHyam;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.24.16.23.09;	author RogerHyam;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.24.11.35.14;	author RogerHyam;	state Exp;
branches;
next	;


desc
@none
@


1.8
log
@none
@
text
@%META:TOPICINFO{author="RogerHyam" date="1195125856" format="1.1" version="1.8"}%
%META:TOPICPARENT{name="WebHome"}%
---+ TaxonAPI

This is kind of defunct - replaced by use of OAI and RDF I believe - RDH - 2007-11-15

TaxonAPI is a Application Programming Interface for retrieving semantically rich taxonomic data from publishers. It is defined at a very high level so that it might be implemented in different ways e.g. as a Tapir service, SOAP service or via some other protocol and so that it integrates with any future TDWG architecture.

The notions used by TaxonAPI are based on those used in the TaxonConceptSchema as this is now an accepted TDWG standard. It is presumed that responses will be in a format that validates against the TCS XML Schema but this may not be the case in the future if some other encoding is used to capture the semantics expressed in the TCS.

TaxonNomenclatorAPI is a subset of TaxonAPI that just handles the retrieval of TaxonNames. Data publishers may choose to just implement this subset if they are only interested in publishing nomenclatural data.

Several of the methods have common behaviours these are defined in TaxonAPIMatching and TaxonAPIPaging.

The notion of an ID within TaxonAPI is described in TaxonAPIIdentifiers.

---++ Method Calls
   * [[TaxonAPIGetTNamesByID][GetTNamesByID()]]
   * [[TaxonAPIGetReferringTNames][GetReferringTNames()]]
   * [[TaxonAPIGetTNamesMatching][GetTNamesMatching()]]
   * [[TaxonAPIGetTConceptsByID][GetTConceptsByID()]]
   * [[TaxonAPIGetTConceptsByTNameID][GetTConceptsByTNameID()]]
   * [[TaxonAPIGetTConceptsMatching][GetTConceptsMatching()]]
   * [[TaxonAPIGetReferringTConcepts][GetReferringTConcepts()]]
   * [[TaxonAPIGetRootTConcept][GetRootTConcepts()]]

---++ Errors
Rely on protocol for error handling.
FIXME - could provide a series of suggested error codes and messages to be passed by host protocol. Suggest that these are based on standard http error codes.

---++ Metadata
TCS uses XML:any to include metadata. The TaxonAPI assumes that the schema used to include this metadata is DublinCore. It also assumes that DublinCore elements are included in the ProviderSpecificData elements of TaxonConcept and TaxonName.

---++ Missing Functionality
   * RelationshipsAssertions aren't yet covered.
   * Iterative calls may be useful. It would be good  to call a single method that iterates over series of TaxonRelationships either to exhaustion or for a set number of steps and returns a tree of TaxonConcepts.
   * There is no metadata call - relies on protocol for doing that?

---++ Background Reading
   * TCS Schema
   * TCS User Guide
   * SPICE protocol? 
   * http://seek.ecoinformatics.org/Wiki.jsp?page=TOSAPISignatures - for the SEEK TCS SOAP API 






-- Main.RogerHyam - 24 Nov 2005@


1.7
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1137751019" format="1.1" version="1.7"}%
d5 2
d50 1
a50 1
-- Main.RogerHyam - 24 Nov 2005
@


1.6
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1133256548" format="1.1" version="1.6"}%
d23 2
a24 1
   * [[TaxonAPIGetRootTConcept][GetRootTConcept()]]
d48 1
a48 1
-- Main.RogerHyam - 24 Nov 2005@


1.5
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1133174118" format="1.1" version="1.5"}%
d40 1
d47 1
a47 2

-- Main.RogerHyam - 24 Nov 2005
@


1.4
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1132933264" format="1.1" version="1.4"}%
d5 1
a5 1
TaxonAPI is a Application Programming Interface for retrieving semantically rich taxonomic data from publishers. It is defined at a very high level so that it might be implemented in different ways e.g. as a Tapir service, SOAP service or via some other protocol.
d26 4
d39 1
a39 1
   * SPICE protocol
@


1.3
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1132916777" format="1.1" version="1.3"}%
d23 1
a23 1

d30 1
d43 1
a43 1
-- Main.RogerHyam - 24 Nov 2005@


1.2
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1132849389" format="1.1" version="1.2"}%
d27 4
d42 1
a42 1
-- Main.RogerHyam - 24 Nov 2005
@


1.1
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1132832114" format="1.1" version="1.1"}%
d11 4
d24 3
@
