head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	2007.11.24.14.04.08;	author RogerHyam;	state Exp;
branches;
next	1.10;

1.10
date	2007.11.15.23.38.08;	author LeeBelbin;	state Exp;
branches;
next	1.9;

1.9
date	2007.11.02.14.06.54;	author RogerHyam;	state Exp;
branches;
next	1.8;

1.8
date	2007.11.02.10.58.55;	author RogerHyam;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.11.15.13.30;	author HerbertSchentz;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.01.15.50.19;	author RogerHyam;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.29.15.09.49;	author GregorHagedorn;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.28.14.56.59;	author RogerHyam;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.28.09.32.18;	author RogerHyam;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.28.08.02.24;	author GregorHagedorn;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.27.16.27.16;	author RogerHyam;	state Exp;
branches;
next	;


desc
@none
@


1.11
log
@none
@
text
@%META:TOPICINFO{author="RogerHyam" date="1195913048" format="1.1" version="1.11"}%
%META:TOPICPARENT{name="TDWGOntology"}%
---+ <nop>%TOPIC%

---++ Why

The TDWG Ontology needs to be developed and maintained collaboratively over a prolonged period of time - possible indefinitely. This will not be possible without a system of management/curation. This page is to develop a system of management.

---++ The Problem

   1 The ontology is a list of URIs with associated definitions (see WhatIsTheOntology for a description).
   1 TDWG should only standardize concepts (URIs and their definitions) that are in use.
   1 New users should be able to differentiate between accepted and experimental or draft concepts.
   1 Standardization cannot change the URI as, by definition, people will be using it.

---++ The Solution

   1 The ontology is managed using a [[http://subversion.tigris.org/][Subversion]] repository.
   1 One branch of the repository is mapped to http://rs.tdwg.org/ontology/ This is the *live branch*.
   1 The trunk of the repository is mapped to http://rs.tdwg.org/ontdev/ This is the *dev branch*.
   1 Changes are made to the development branch.
   1 The *Ontology Manager* migrates (i.e. *promotes*) some the stable concepts from the dev branch to the live branch.
   1 Concepts in the live branch have stable URIs and will be deprecated for at least a year before being deleted.
   1 Concepts in the dev branch may be deleted at any time and will change their URIs if they are promoted to the live branch.
   1 Concepts in the live branch *may* form part of a TDWG standard and will be tagged accordingly.
  
---++ Ontology Manager

Currently the Ontology Manager role is being fulfilled by Main.MarkusDoering and Main.RogerHyam. It is envisaged that this role will always be shared by more than one person and that, in the future, a small editorial commit may be formed.

---++ Relationship Between TDWG Standards and the Ontology

Concepts are standardized by being included in TDWG Standards. Once they have been mentioned in a standard the Ontology Manager has the responsibility of maintaining their URIs and descriptions as per the standard. Concepts must be promoted to the live branch before the standard enters the standards process.


*This page had a major re-purposing on 2007-11-02. You can see the previous text using the version control at the bottom of the page.*


----
%SEARCH{"%TOPIC%" excludetopic="%TOPIC%" header="*Linking Topics*" format="   * $topic" nosearch="on" nototal="on" }%@


1.10
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="LeeBelbin" date="1195169888" format="1.1" version="1.10"}%
d27 4
@


1.9
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1194012414" format="1.1" reprev="1.9" version="1.9"}%
d11 1
a11 1
   1 The ontology is fundamentally a list of URIs with associated definitions (see WhatIsTheOntology for a description).
d13 2
a14 2
   1 New users need to differentiate between accepted concepts and those that are just experimental.
   1 Standardization can not involve changing the URI as, by definition, people will be using it.
d22 1
a22 1
   1 The *Ontology Manager* migrates (i.e. *promotes*) some the more stable concepts from the dev branch to the live branch.
d25 1
a25 1
   1 Concepts in the live branch may, or may not, form part of a TDWG standard. If they are part of a standard they will be tagged as being so.
d36 1
a36 1
%SEARCH{"%TOPIC%" excludetopic="%TOPIC%" header="*Linking Topics*" format="   * $topic" nosearch="on" nototal="on" }%
@


1.8
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1194001135" format="1.1" version="1.8"}%
d5 10
a14 1
---+ This page is going to have a major change in a minute.
d16 12
a27 2
---++ Why
The TDWGOntology needs to be developed and maintained collaboratively over a prolonged period of time - possible indefinitely. This will not be possible without a system of management/curation. This page is to develop a system of management.
d29 1
a29 1
Presented here is a 'first attempt' at a management system that will be improved on as the SeedOntology is developed.
a30 39
---++ Basic Principles
   * The TDWG ontology is only concerned with shared data. It is a model of the semantics that are actually needed to communicate. This does not mean that TDWG as an organisation is only interested in shared data but it is the purpose of *this* ontology. [Observation: Anecdotely it appears that ontologies must have a purpose or they will be useless].
      * Gregor: please give examples of data that do not need to be communicated. I can think of only few examples like database backup times, link-checking results. Most other "management information" like who edited when and revision histories may in contrast be highly relevant when sharing data in a UseCaseCollaborativeDocumentEditing - see this wiki which is about sharing data.
      * Roger: Potentially everything might need to be communicated I guess. That is the problem. We need to create an ontology on the basis of what people are actually communicating not on what they might want to. So we make it easy for some one to establish a concept and, once they have demonstrated it is useful to others, we formalise it (see list below). If you think it is important to publish the detailed revision history of an author string then you can develop concepts within the ontology and start producing documents or objects that use these concepts but they won't make it to "Suggested" until others start making use of them. They actually have to be useful to more than their inventors.
   * The management system should differentiate between speculative/research based concepts and those that are actually used to communicate between unrelatd individuals so that potential users can make judgements about their value.
      * Gregor: Is this a different management system? I thought "management system" was about management of the ontology, not about management of data.
      * Roger: It is about concepts in the ontology not about the data. You have to demonstrate that you are sharing data on the basis of concepts in the ontology before those concepts progress through the levels below. ( I reworded the above to make it clearer)
      * Gregor: please give examples for this distinction. I find it rather strange to call research data speculative. In taxonomy often the opposite can be said, i.e. that historical, but used concepts are speculative, and research concepts scientifically well founded.
      * Roger: We are only interested in formalising the concepts that are shared therefore you need to demonstrate that you are sharing it before we label it as being a shared understanding and it progresses through the levels. There is no other way to say data is shared other than demonstrating it. ABCD with EGF extension contains over 1,800 concepts. If I am implementing a system to produce or consume ABCD documents today how do I prioritise which of these concepts I support. If, of the 100 institutions using ABCD, none of them actually exploits concept X then it is probably not worth me dedicating a day to getting my system to support it (unless I have a special reason to). If, however,  60% of them support concept Y I may spend some time on that.
      * Gregor: By which operational method do you propose to measure the degree by which a concept is used/adopted?
      * Roger: See the levels defined below. I propose we actually look at working systems. If data isn't exchanged on the basis of a concept then the concept doesn't progress. It can exist in the system so there is always the potential for promotion but until it is demonstrated to be widely adopted by real individuals/software applications/institutions it won't go up through the levels. Transparency is the name of the game!
   * The management system should encourage experimentation and research.
   * Management should, where possible, be by an explicit set of rules rather than judgement calls - although these can't be eliminate entirely.
   * There will be an ontology editor/administrator who is responsible for running the system.
   * All items (classes or properties etc) within the ontology will have an adoption level.

---++ Ontology Adoption Levels
   1. *Experimental* - Not visible to people outside the task group who are working on it.
   2. *Shared* - Visible to other task groups who work on ontologies but not to the 'general public' by default. To become shared the task group must show The Editor a working example of data being served and consumed e.g. an LSID provider which returns data using the construct. This is a purely technical test so the editor can just decide with only minimal consultation. It prevents task groups swamping other groups with loads of new concepts that they can't demonstrate use of. Shared concepts can be deleted without warning.
      * Gregor: An editor is clearly useful, but decisions in TDWG can only be made by the executive or the membership by vote.
      * Roger: The Executive could deligate responsibility to the editor with an appeal procedure to the exec if people are unhappy. I don't imagine they want to spend all their time making a large number of small decisions.
      * Gregor: Who can delete "Shared concepts"?
      * Roger: Good question. I guess it would have to be the editor.
      * Gregor: How do you propose to manage something that is not visible to the general public, but should be adopted by actual web services? I believe this is not possible.
      * Roger: Glad to have your confidence :) If you see below I propose setting up a system with the wiki initially. This would probably have general availability through the wiki. At the backend we would create RDF or XML Schema definitions for the concepts. These would be totally open and available to all and hosted at their final URLs right from the start. There is an issue of versioning here we need to think about. By 'not visible to the general public' I mean not promoted. A user would have to opt in to see these things.
   3. *Suggested* - Visible to the public and suggested for other groups to adopt. To reach this stage real data has to be served and consumed across the network on the basis of this concept. The decision to move to suggested may need to be OK'd by the TAG or Executive.  Suggested concepts are never deleted they merely become deprecated.
   4. *Recommended* - Real data is being served and consumed on the basis of the concept by people other than those who created it. This is equivalent to a real rock solid standard. The decision to move to recommended must be OK'd by the TAG or Executive and is not likely to be reached by a suggested concept for several years. Recommended concepts are never deleted they merely become deprecated.
   5. *Deprecated* -  Formerly shared or recommended. May be in use. Not recommended or suggested for future adoption. Will be maintained indefinitely for historical reasons.
      * Gregor: Too many steps in this; I propose to reduce to 4. Please clarify what "visible" means, the TDWG tradition is to be an open group with public documentation. I would like to keep it like that.
      * Roger: See comment above. I really mean "clearly marked as developmental" i.e. the user has to actually turn something on to see what is happening in the development space - so that it doesn't confuse the accepted space. This is a similar idea to subscribing to a "dev" mailing list rather than just following the "announce" list for a project. 

---++ Implementation
The plan at the moment is to develop the Seed ontology on this wiki and to use the features of the TWiki platform to implement a prototype ontology management system or to help manage the ontology manually. Requirements:
   1 A uniform way of representing the different ontology constructs required. Perhaps incorporating UML summary diagrams.
   1 A method of 'locking down' those concepts that have been agreed on.
   1 A method of automatically or semi-automatically generating RDDL and/or RDF and/or XML Schema from the wiki pages! (It may be possible to do this using TWiki forms and a Perl script.)
-- Main.HerbertSchentz - 11 May 2006: When using RDF Schmata it makes much sense to devide the ontology into different partial ontologies. This helps when you want to get a good overview. We could put recomended concepts together to packages.
----
The goal is enable the creation of Classes and Properties in the wiki and then use them in applications as smoothly as possible.
d32 1
d36 1
a36 1
%SEARCH{"%TOPIC%" excludetopic="%TOPIC%" header="*Linking Topics*" format="   * $topic" nosearch="on" nototal="on" }%@


1.7
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="HerbertSchentz" date="1147360410" format="1.1" version="1.7"}%
d5 2
@


1.6
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1146498619" format="1.1" version="1.6"}%
d46 2
d53 1
a53 1
%SEARCH{"%TOPIC%" excludetopic="%TOPIC%" header="*Linking Topics*" format="   * $topic" nosearch="on" nototal="on" }%
@


1.5
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1146323389" format="1.1" version="1.5"}%
a9 2
###Temporary: Roger, I suggest, you replace unqualified "concept" with something that qualifies what kind of concept you mean. If I read concept I think of a taxon concept or descriptive concept (flower, color, blue, frequently) but not of the kind of concepts you mean (I would say "data elements" for these, but I leave it to you. This was the source of the major misunderstanding about Management system and data. Note that both taxon and descriptive concepts have and need ontology information, even if not expressed in RDF - so just saying "ontology concepts" would not be very clear I believe. 2. If you replace "visible" with "marked developmental" you can delete some comments. 3. In one answer below you say "GUI" - to me this means Graphical User Interface, but you seem to mean something else, perhaps spell out. Please remove/refactor this and the relevent comments or else the topic becomes unreadable. -- Gregor

d34 1
a34 1
      * Roger: Glad to have your confidence :) If you see below I propose setting up a system with the wiki initially. This would probably have general availability to the GUI. At the backend we would create RDF or XML Schema definitions for the concepts. These would be totally open and available to all and hosted at their final URLs right from the start. There is an issue of versioning here we need to think about. By 'not visible to the general public' I mean not promoted. A user would have to opt in to see these things.
d51 1
a51 1
%SEARCH{"%TOPIC%" excludetopic="%TOPIC%" header="*Linking Topics*" format="   * $topic" nosearch="on" nototal="on" }%@


1.4
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1146236219" format="1.1" version="1.4"}%
d10 1
d19 1
a19 1
      * Gregor: please give examples for this distinction. I find it rather strange to call research data speculative. In taxonomy often the opposite can be said, i.e. that can historical, but used concepts are speculative, and research concepts scientifically well founded.
@


1.3
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1146216738" format="1.1" version="1.3"}%
d14 1
a14 1
      * Roger: Potentially everything might need to be communicated I guess. That is the problem. We need to create an ontology on the basis of what people are actually communicating not on what they might want to. So we make it easy for some one to establish a concept and, once they have demonstrated it is useful to others, we formalise it (see list below). If you think it is important to publish the detailed revision history of an author string then you can develop concepts within the ontology and start producing documents or objects that use these concepts but they won't make it to "Suggested" until others start making use of them. They actually have to be useful to more that there inventors.
d52 1
a52 1
%SEARCH{"%TOPIC%" excludetopic="%TOPIC%" header="*Linking Topics*" format="   * $topic" nosearch="on" nototal="on" }%
@


1.2
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1146211344" format="1.1" version="1.2"}%
d14 2
a15 1
   * The management system should differentiate between speculative/research based concepts and those that are actually used so that users can make judgements about their value.
d17 3
a19 1
      * Gregor: please give examples for this distinction. I find it rather strange to call research data speculative. In taxonomy often the opposite can be said, i.e. that can historical, but used concepts are speculative, and research concepts scientifically well founded. 
d21 1
d30 2
a31 1
      * Gregor: An editor is clearly useful, but decisions in TDWG can only be made by the executive or the membership by vote. 
d33 1
d35 1
d40 1
a52 1

@


1.1
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1146155236" format="1.1" version="1.1"}%
d13 1
d15 3
d19 1
a19 1
   * Management should, where possible, be by an explicit set of rules rather than judgement calls - although these can't be elliminate entirely.
d26 3
d32 1
@
