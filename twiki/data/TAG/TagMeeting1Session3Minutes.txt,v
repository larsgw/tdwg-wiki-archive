head	1.4;
access;
symbols;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2006.04.12.16.49.00;	author RogerHyam;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.12.12.11.15;	author RogerHyam;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.12.10.37.36;	author RogerHyam;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.12.08.05.31;	author RogerHyam;	state Exp;
branches;
next	;


desc
@none
@


1.4
log
@none
@
text
@%META:TOPICINFO{author="RogerHyam" date="1144860540" format="1.1" version="1.4"}%
%META:TOPICPARENT{name="TagMeeting1Agenda"}%
---+ <nop>%TOPIC%

---++ Objectives for day 
 
   * Exchanging identified semantically rich, machine readable Objects
      * What qualities does the network need to support this?
         * Resolve - URL/LSID
              * Universal method(s) (common to all instances) that identify the object type. 
              * In XML: namespace is a URI. 
              * For TDWG namespaces are URLs - resolvable.
              * Need to evaluate RDDL - as target of resolable namespaces. 

----------------              
              * In XML Schema spec.. supplying schema location is not required. Consuming applications can use their own schemas if they wish.

              * In TDWG All XML objects must have a schema location that resolves to a standard schema that the object will validate against.

              * TDWG must permanently host schemas that are considered standards but application providers may host their own schemas if they need.

-----------------
              * RDF/S and therefore OWL based on resolvable namespaces.
              * Libraries need to handle RDF embeded in XHTML.
              * Need to check that RDDL does not break libraries if we use it.
------------------

How do we define objects 1 - XML Schema.
   * top level element - current Schema would have to be modified.
   * should also be complex types - so can do data binding. 
   * Could be done on 'global' element variant versions of existing schemas.
   * Whatever these top level objects are they must have a GUID attribute.
   * Standard pointer/reference type. 

How do we define objects 2 - Semantic Web.
   * Default to what the GUID owner says it is.
   * Objects should be Concise Bounded Descriptions?
   * How do we define the standard? - in the ontology.

---++  Crawl (Spidering/Navigating)
   * For harvesting or 'exploring'. 
   * Following links IS resolving (see above)
   * What if you can't get to the whole tree from your first link? Tough - see harvesting or searching or query. You don't know it is there anywhere!
   
---++ Harvest
   * Give me all of it i.e. all your GUIDs of type?
   * Pull - give me modified since X
   * Push - give me what is changed/removed/added.
   * Dif mechanism.
   * Versioning of LSIDs.
   * Open Archives Initiative? RSS? Some existing system?

* Basic node provides resolution and harvest interfaces.

   * Need to have a mechanism to express whether an object behind a LSID is persistent or not. Possibly time-to-live.
   * Request for GUID framework to have a 'tag' to say that particular LSIDs will be persistent.

---++ Search

   * Locate an object or objects using some match criteria.
   * Match criteria can be anything. 
   * 

---+++ Key word searching

---+++ 

On any given data provider can only address those issues

---++ Reason

---++ Query?
         * Expose/Publish.
      * How can we use/adapt/migrate our current applications to do it.


   * Total agreement: We need to model the current TDWG domain in terms of the data exchanged.

   * This should be represented in UML diagrams for discussion purposes.

   * Multiplicity relationships are key to identifying primary objects.


   * Base Ontology - autocratic - very basic....GUID, dc:title? 
   * Core Ontology - democratic (How do we scope this?)
   * Other schema - freedom

   * Jessie's group will have a meeting that will dice up the current schemas to work out what the primary object classes should be. This should produce a non-nomative analysis as UML diagrams _and recommendations for a core ontology_.

   * Jessie needs to investigate deriving single ways of converting the UML produced into XML Schema and RDFS/OWL.

   * Tomorrow - narrow down this study.
      * Namespaces
      * Harvesting interface OAI & Opensearch & Other things.
      * 

---++ Agenda for day

   * Discuss - network requirements
   * Coffee
   * Talks - as many as we can
   * Lunch
   * Talk - more talks?
   * Discuss
   * Tea
   * Discuss
   * Play time





----
%SEARCH{"%TOPIC%" excludetopic="%TOPIC%" header="*Linking Topics*" format="   * $topic" nosearch="on" nototal="on" }%
@


1.3
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1144843875" format="1.1" version="1.3"}%
d51 1
d76 21
@


1.2
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1144838256" format="1.1" version="1.2"}%
d48 1
a48 1
   * Push - give me what is changed/removed/modified.
d50 1
a50 1
   * Versioning of LSIDs
d52 1
d54 2
d57 1
a57 1
              * Services can not assume that namespace of an object is resolvable.
d59 13
a71 3
         * Search ?
         * Reason?
         * Query?
@


1.1
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RogerHyam" date="1144829131" format="1.1" version="1.1"}%
d7 2
a8 2
   * Exchanging identified Objects
      * What qualities does the network need to support this.
d10 48
a57 1
         * Search?
d59 1
d64 1
a64 2
   * Talk
   * Discuss
d66 1
a66 2
   * Talk
   * Discuss
d68 1
a68 1
   * Talk
a70 1
   * Talk
a79 1

@
