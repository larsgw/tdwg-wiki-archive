%META:TOPICINFO{author="BobMorris" date="1159361162" format="1.1" version="1.1"}%
%META:TOPICPARENT{name="EstablishingLsidVocabularies"}%
---+ <nop>%TOPIC%



Please enter text for a new page here.



----
%SEARCH{"%TOPIC%" excludetopic="%TOPIC%" header="*Linking Topics*" format="   * $topic" nosearch="on" nototal="on" }%

---++ What language should be used?
In EstablishingLsidVocabularies Roger put
   * I (Roger) am going to suggest a simplified metamodel for use in the TDWG ontology because it has to be mapped into multiple technologies. It has to be expressed in GML/XSD/OBO?/Used for Tagging Micro formats/ all sorts...
   * Should the LSID vocabularies be RDFS/OWL - Lite/DL/Full?
Bob opined
    * No, they should be UML PIMs constrained by the  [[http://www.omg.org/cgi-bin/doc?ad/06-05-01.pdf][OMG Ontology Definition Metamodel (ODM)]] Those other things should be PSMs derived from them. -- Main.BobMorris - 26 Sep 2006
    
Roger replied
  * If we use UML PIMs then we need to decide on the points below. Otherwise it would be quite straight forward:
         * Which dialect of XMI we use to transfer data - none appear to be fully interoperable between tools. The OGC team are all using Enterprise Architect.
         * How we transfer diagrams - there is no standard. The OGC team are all using EA - so it doesn't matter.
         * How we break down UML modules and how we link them to each other. We still have the namespace problem and UML is particularly bad at handling linking between models (in the opinion of the OGC team don't seem to have solved this problem).
         * How we facilitate collaborative working - UML tools tend to be bad at this unless you pay a great deal of money.
         * How we choose a subset of UML (metamodel/profile) that we are going to use - so we can be sure of expressing our model in the target language(s).
         * How we enforce/test that any particular model meets the metamodel we have defined above.
         * How we get a set of distributed biologists to start using UML in the correct way.
         * How we define a mapping to the target language(s) (if there is only one language then we needn't bother with the UML)
         * Basically it is this list that has put me off a UML based approach - but I have an open mind... Main.RogerHyam - 2006-09-27
Bob replied: These are all good points but (a)Most of them apply more or less to any solution to any modeling problem and (b)UML has a long history of producing formal enough representations that there are usually fairly mechanical ways of handling them. Whether or not a given one is simple or complex, when used properly UML has a much lower likelihood of leaving you blindsided---let's call that the !DiGIR vs !BioCase trap to bring the point home---than if you make a bunch of PSMs and try to make them play nice together. -- Main.BobMorris - 27 Sep 2006

Bob is hoping that a good discussion starts here of these issues.

-- Main.BobMorris - 27 Sep 2006

