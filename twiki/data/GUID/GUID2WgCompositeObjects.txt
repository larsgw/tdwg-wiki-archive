Composite objects such as taxonomic descriptions, images, and raw XML which may live in databases have some of their parts mutable and some immutable. It is complicated to store the entire representation in the data, then have some kinds of pointers from metadata explaining which of those may have changed and require, e.g. a new version to be fetched. On the other hand, if one puts everything in the LSID metadata, then, in general, nothing about immutability can be assumed unless there are provided some rules or other agreed upon mechanisms for specifying what is mutable. Absence of this can make collaborations across time space diffficult.  

One solution proposed is that all metadata is regarded as mutable, and any time a group of agents wishes to have a conversation about a given LSID'd object, it is "checked out" and a new LSID issued to that object perhaps with reference to the original. 

Two secondary issues arose: RDF is not rich enough to describe all the concerns of descriptive data (e.g. continuous data) and bytewise equality may not always be a useful criterion for when two datasets are the same. (Examples include: Serialization changes, e.g. two different lossless image encodings or two different orderings of an XML sequence which for which schema annotation has declared the order doesn't matter).

There was some agreement that it is worth proceding in the face of these impediments to see how great they are.

Bob Morris, Jessie Kennedy, Damien Barnier, Tim Robertson
