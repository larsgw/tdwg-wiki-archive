head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2009.11.25.03.14.38;	author GarryJolleyRogers;	state Exp;
branches;
next	1.6;

1.6
date	2009.11.20.02.45.31;	author LeeBelbin;	state Exp;
branches;
next	1.5;

1.5
date	2007.03.06.17.30.00;	author TWikiGuest;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.25.08.30.15;	author GregorHagedorn;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.15.13.20.01;	author GregorHagedorn;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.18.00.37.14;	author KevinThiele;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.17.15.59.00;	author BobMorris;	state Exp;
branches;
next	;


desc
@none
@


1.7
log
@none
@
text
@%META:TOPICINFO{author="GarryJolleyRogers" date="1259118878" format="1.1" version="1.7"}%
%META:TOPICPARENT{name="StoredIdentificationKeys"}%
---+!! %TOPIC%

It seems that if A, B, and C are Statements on the children of a node, it is always logically correct to make the Question on the parent be "Does one of A, B, or C describe the object?". So the point is to provide the author with a more rational question than this? -- Main.BobMorris - 17 Nov 2003

---

This was my idea, I think. In Lucid Phoenix, we found that it's nice to be able to offer people both the conventional statement type of key, and a (perhaps) more user-friendly question-answer style. A conventional statement key is the one we're all familiar with as taxonomists, e.g.

<verbatim>
1  Leaves ovate........2
1a Leaves elliptic.....3

2  Flowers blue.......etc
2a Flowers red........etc
</verbatim>

These keys are maximally efficient for printing on paper, but of course we're way past Gutenberg here. 

A question-answer style key is very nice I think for computer representations for naive users, e.g.

<verbatim>
1. What shape are the leaves?
    a) ovate............goto 2
    b) elliptic.........goto 3

2. What colour are the flowers?
    ...etc
</verbatim>

These are particularly good when the "leads" e.g. ovate and elliptic are images. That's why it's nice to have both question text and lead text (or images).

-- Main.KevinThiele - 18 Nov 2003

---

I agree. SDD allows to add specific image resources intended as icon (Representation/MediaObject role="iconic") or "selector images" (Representation/MediaObject role="diagnostic"). Icons can supplement text, selectors can replace text (= Representation/Label). Question/Label is of this label type, similar to character and state labels. SDD thus supports:

<pre>(no question)
  text statement (with optional icon)
  text statement (with optional icon)

(no question)
  Selector image<br />
  Selector image

Question text
  Selector image
  Selector image

Question text
  text statement (with optional icon)
  text statement (with optional icon)
</pre>

Gregor Hagedorn - 15 Dec 2003 
---

(Updated for SDD 1.1)

%META:TOPICMOVED{by="GregorHagedorn" date="1145955301" from="SDD.LeadStatementVsLeadsQuestionText" to="SDD.StoredKeyStatementVsQuestion"}%
@


1.6
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="LeeBelbin" date="1258685131" format="1.1" reprev="1.6" version="1.6"}%
d38 1
a38 1
I agree. BDI.SDD allows to add specific image resources intended as icon (Representation/MediaObject role="iconic") or "selector images" (Representation/MediaObject role="diagnostic"). Icons can supplement text, selectors can replace text (= Representation/Label). Question/Label is of this label type, similar to character and state labels. BDI.SDD thus supports:
d60 1
a60 1
(Updated for BDI.SDD 1.1)
@


1.5
log
@Added topic name via script
@
text
@d1 2
a4 2
%META:TOPICINFO{author="GregorHagedorn" date="1145953815" format="1.0" version="1.4"}%
%META:TOPICPARENT{name="StoredIdentificationKeys"}%
d25 2
a26 2
	 a) ovate............goto 2
	 b) elliptic.........goto 3
d29 1
a29 1
	 ...etc
d38 1
a38 1
I agree. SDD allows to add specific image resources intended as icon (Representation/MediaObject role="iconic") or "selector images" (Representation/MediaObject role="diagnostic"). Icons can supplement text, selectors can replace text (= Representation/Label). Question/Label is of this label type, similar to character and state labels. SDD thus supports:
d60 1
a60 1
(Updated for SDD 1.1)
@


1.4
log
@none
@
text
@d1 2
@


1.3
log
@none
@
text
@d1 55
a55 61
%META:TOPICINFO{author="GregorHagedorn" date="1071494401" format="1.0" version="1.3"}%
%META:TOPICPARENT{name="GuidedKeys"}%
It seems to us that the most likely text on the Leads <nop>QuestionText is the same, or a trivial rewording of the Statement on the parent Lead of the given Leads. We'd particularly like to see an example where there is an important distinction between these two bits of text, or some discussion of getting rid of one of them. We lean slightly toward eliminating the Leads <nop>QuestionText. -- Main.BobMorris and Main.JacobAsiedu - 17 Nov 2003
---
Oh, well, Gregor's instance document for 0.9beta22 has such an example, so maybe we have to look at it a little more... Main.BobMorris and Main.JacobAsiedu - 17 Nov 2003
---
It seems that if A, B, and C are Statements on the children of a node, it is always logically correct to make the Question on the parent be "Does one of A, B, or C describe the object?". So the point is to provide the author with a more rational question than this? -- Main.BobMorris - 17 Nov 2003
---
This was my idea, I think. In Lucid Phoenix, we found that it's nice to be able to offer people both the conventional statement type of key, and a (perhaps) more user-friendly question-answer style.

A conventional statement key is the one we're all familiar with as taxonomists, e.g.

<verbatim>
1  Leaves ovate........2
1a Leaves elliptic.....3

2  Flowers blue.......etc
2a Flowers red........etc
</verbatim>

These keys are maximally efficient for printing on paper, but of course we're way past Gutenberg here. 

A question-answer style key is very nice I think for computer representations for naive users, e.g.

<verbatim>
1. What shape are the leaves?
	 a) ovate............goto 2
	 b) elliptic.........goto 3

2. What colour are the flowers?
	 ...etc
</verbatim>
These are particularly good when the "leads" e.g. ovate and elliptic are images.

That's why it's nice to have both question text and lead text (or images).

-- Main.KevinThiele - 18 Nov 2003
---

Yes, this is Kevin's idea. SDD allows to add specific image resources intended as icon (Label/Icon) or "selector images" (Label/Selector). Icons can supplement text, selectors can replace text (= Label/Text). <nop>QuestionText is of this label type, similar to character and state labels. SDD thus supports:

<pre>(no question)
  text statement (with optional icon)
  text statement (with optional icon)

(no question)
  Selector image<br />
  Selector image

Question text
  Selector image
  Selector image

Question text
  text statement (with optional icon)
  text statement (with optional icon)
</pre>


Gregor Hagedorn - 15 Dec 2003 

d58 3
@


1.2
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="KevinThiele" date="1069115834" format="1.0" version="1.2"}%
d38 24
@


1.1
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="BobMorris" date="1069084740" format="1.0" version="1.1"}%
d4 18
d23 13
a35 1
Oh, well, Gregor's instance document for 0.9beta22 has such an example, so maybe we have to look at it a little more... Main.BobMorris and Main.JacobAsiedu - 17 Nov 2003
d37 2
a38 1
It seems that if A, B, and C are Statements on the children of a node, it is always logically correct to make the Question on the parent be "Does one of A, B, or C describe the object?". So the point is to provide the author with a more rational question than this? -- Main.BobMorris - 17 Nov 2003
@
