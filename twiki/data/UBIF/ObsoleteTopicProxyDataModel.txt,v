head	1.28;
access;
symbols;
locks; strict;
comment	@# @;


1.28
date	2009.11.25.03.14.42;	author GarryJolleyRogers;	state Exp;
branches;
next	1.27;

1.27
date	2009.11.20.02.45.35;	author LeeBelbin;	state Exp;
branches;
next	1.26;

1.26
date	2007.03.06.17.30.00;	author TWikiGuest;	state Exp;
branches;
next	1.25;

1.25
date	2006.05.08.10.42.50;	author GregorHagedorn;	state Exp;
branches;
next	1.24;

1.24
date	2005.03.21.17.48.29;	author GregorHagedorn;	state Exp;
branches;
next	1.23;

1.23
date	2004.11.01.11.28.42;	author GregorHagedorn;	state Exp;
branches;
next	1.22;

1.22
date	2004.09.02.09.02.25;	author GregorHagedorn;	state Exp;
branches;
next	1.21;

1.21
date	2004.08.13.12.43.22;	author GregorHagedorn;	state Exp;
branches;
next	1.20;

1.20
date	2004.08.11.20.08.00;	author GregorHagedorn;	state Exp;
branches;
next	1.19;

1.19
date	2004.07.29.13.01.54;	author GregorHagedorn;	state Exp;
branches;
next	1.18;

1.18
date	2004.07.16.10.46.00;	author GregorHagedorn;	state Exp;
branches;
next	1.17;

1.17
date	2004.07.15.18.06.00;	author GregorHagedorn;	state Exp;
branches;
next	1.16;

1.16
date	2004.06.23.16.53.10;	author GregorHagedorn;	state Exp;
branches;
next	1.15;

1.15
date	2004.06.18.14.15.00;	author GregorHagedorn;	state Exp;
branches;
next	1.14;

1.14
date	2004.06.11.10.15.50;	author GregorHagedorn;	state Exp;
branches;
next	1.13;

1.13
date	2004.06.10.06.27.00;	author GregorHagedorn;	state Exp;
branches;
next	1.12;

1.12
date	2004.06.06.14.00.44;	author GregorHagedorn;	state Exp;
branches;
next	1.11;

1.11
date	2004.06.04.13.35.27;	author GregorHagedorn;	state Exp;
branches;
next	1.10;

1.10
date	2004.06.01.16.53.47;	author GregorHagedorn;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.28.14.40.55;	author GregorHagedorn;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.28.13.35.36;	author GregorHagedorn;	state Exp;
branches;
next	1.7;

1.7
date	2004.05.28.12.09.54;	author GregorHagedorn;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.28.11.03.03;	author GregorHagedorn;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.25.21.14.00;	author GregorHagedorn;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.25.13.26.34;	author GregorHagedorn;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.25.12.13.00;	author RobBuis;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.25.11.06.00;	author GregorHagedorn;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.24.10.56.02;	author GregorHagedorn;	state Exp;
branches;
next	;


desc
@none
@


1.28
log
@none
@
text
@%META:TOPICINFO{author="GarryJolleyRogers" date="1259118882" format="1.1" version="1.28"}%
%META:TOPICPARENT{name="BDI.SDD_"}%
---+!! %TOPIC%

(This is part of the UBIF.SchemaDiscussion discussion. See also InterfaceDiscussion. The name for the section contain Agent, Publication, etc. Proxy objects in the TopLevelStructure is discussed under NameForProxyOrInterfaceSection.)
---

Fundamentals: 
   * From the standpoint of a biodiversity dataset many objects from other knowledge domains need to be addressed, such as publications, geographical locations from gazetteers, agents (organisation, person, software) and media libraries (e.&nbsp;g. images in different resolutions and with captions in multiple languages).
   * From a specific biodiversity dataset, the same in true for other biodiversity knowledge domains. For example, descriptive data need class (taxon) names, class hierarchies, references to specimens/units.
   * Three conventional methods exist to deal with this situation:
      1 Ignore the problem and pretend the external objects can be represented by a simple human readable string (publication, person name, taxon name), disregarding the fact that this only allows humans to guess identity and prevents integration of different datasets. Unions of such sets can be queried using fuzzy query operators, but datasets cannot be joined - e.&nbsp;g. not <nop>GenBank sequences with ABCD specimen and GLOPP host-parasite interaction data.
      2 Realize the problem and provide a internal object representation that is specific to the application. Thus Specify is also a literature database, <nop>DarwinCore and ABCD have geography and taxon name models, the <nop>TaxonConcept schema proposes to use the <nop>EndNote literature information model. These methods do not allow to truly reference external object providers.
      3 Use a URL web address. This has two major problems: 
         * It may break and then not only the link is lost, but also often the semantics of the referencing object (a descriptions claiming to describe "http://x.y.org/taxon?ID=234764" is worthless).
         * Although most objects can be provided some are not available. No external taxonomic name service will ever be able to provide all, including new taxon names so that they can be described.

To solve these problems I propose to consistently use a class of objects called proxy data. These primarily have very simple representation of an object composed of 
   * Label (potentially in multiple languages) that is expected to capture the semantics of the object (make it recognizable to humans outside of the referring context). This implies a desire to be globally unique, which cannot be guaranteed however. The Label is required.
   * Links using several linking concepts including LSID, DOI, direct URLs, or perhaps web service definitions. The Links are optional and will be missing when no external object exists yet.
   * a key attribute that allows a proxy object to be referenced multiple times within an xml document.
Together with a developer Annotation and extensibility containers (Ext and <nop>CustomExtensions) this constitutes the base functionality of the <nop>ProxyData type.

In addition, each kind of proxy data class may contain extensions providing additional, more detailled data. To discuss both the base proxy elements and such extensions, I propose to discuss publications. This is external data to all currently active groups and is of similar importance to most biodiversity groups. Also it is obvious that no external publication database will ever fully provide the needs of scientists both citing difficult-to-find 200 year old literature and publications that have just appeared.

   * <small>Jerry Cooper writes: <em>"Finally, I will make a prediction... In two years time we will decide that we urgently need a standard for describing literature because [...] we need a mechanism for sharing ‘literature objects’. The data structures for storing literature references in many databases are inadequate and people will have a lot of future work in order to standardise them. However, a standard already exists, MARC, and, although it is based on flat data, at least it atomizes and tags the components logically (and is actually quite easy to re-model into a hierarchical structure). We really do need to think about this now and be encouraging digitizers to treat literature data with respect and not dump it into a string! The ‘SimpleCitation’ object in this schema is a MARC subset."</em> -- I agree. It would be highly valuable if the standard tracks coming up for the TDWG meeting in NZ would already all agree on a common publication-specific extension of a general linking model!</small>

   * <small>See also the useful comments on Publications in http://circa.gbif.net/Public/irc/gbif/dadi/newsgroups?n=names&a=re&art=27</small>

So in &gt; &gt; <strong> ProxyDataPublication</strong> &lt; &lt; please discuss both the basics of Proxies and the specifics of reference models!

---

The proxy architecture is proposed as a generally used architecture for all biodiversity knowledge domains (see ObsoleteProxyListsInAllTdwgGbifStandards). The following is a graphical overview of the use of proxy in the current version of BDI.SDD_:

<p style="text-align:center"><img src="%ATTACHURLPATH%/ProxyTypeOverview.png" alt="ProxyTypeOverview.png" /></p>

I personally believe that proxy data objects are what the GBIF indexer should be built upon. A data provider that participates in GBIF could export all internal objects into a <nop>ProxyData object, mapping the local complex data model to the shared data model. This is similar to the flat representations that <nop>DiGIR uses, with the slight difference that they are not exclusively coupled to a query protocol, but can also be used to cache data locally. This would be ideal as a basis for the GBIF indexer.

---

Other proxy discussions (except ProxyDataPublication):

   * For specimen (<nop>BDI.SDD_.Objects) see ProxyDataSpecimen - here especially what would the common name be? Note that here I propose to basically reuse the elements from <nop>DarwinCore after extracting them from their tight coupling into <nop>DiGIR!
   * For images (<nop>MediaResourceProxy) see ProxyDataMediaResource.
   * Agents: AgentDataModel, also the older: BDI.SDD_.WhenAreTwoAgentsTheSame?

<strong>History and term for the concept:</strong> In version BDI.SDD_ 0.9 (dec. 2003) <nop>ProxyTypes used to be called <nop>ResourceConnectors. This was considered not intuitive. At the Berlin 2004 meeting the term "proxy" (-data or -type) was accepted by all those present. The term "proxy" is used in the frequently used proxy programming pattern. It refers to the fact that the objects may either be proxies if no external object exists, or proxy cache if the asynchronous external object is temporarily unreachable (see also the earlier WIKI discussion ResolvedTopicConnectorOrProxy).
 
-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 18 June 2004

---

Donald Hobern commented in email:

   * In general I think that the proxy idea is a good one but we need serious work to get general buy-in for the idea and to make sure that the specifics are right.  I would say therefore that we should avoid presenting it as a core part of UBIF right now.  We need something to occupy this position, but it may be simpler to move the whole problem out of the data modeling issue by using GUIDs to reference external data resources and elements and to rely on external services to provide data on the various access methods and formats.  Anything we put in the XML may be invalidated at any time.  Keeping track on location-independent GUIDs may be a simpler idea.  I certainly think we need to float the problem and the alternatives in Christchurch but I would take all of the Proxies out of version 1 of UBIF. I realise you've put a lot of effort into this, but I think it is still too speculative to become part of the standard core.

My comments: Moving things out is the general trend on the web, but I am very wary about this. I am very much in favor of federating data, collaborating and using IDs to link information. However, I believe data streams and documents should maintain a sense of continuity and preserve the semantics of links for human consumption. This is the essential model of printed books and libraries - and it is one of the foundations of science.

Imagine printed scientific articles - instead of giving human readable references - refer to some GUID code that you can enter into the computer and then obtain the information. This is the current state on the web. Unfortunately, we all know that institutions, even if well managed, change. Data citing specimens solely by case numbers used at a given time in a specific collection may become worthless after some restructuring. In our institution we find that the knowledge of coded references that was preserved over decades, often disappears with retirement of colleagues and valuable data become trash.

So when talking about proxies I have two interfaces in mind:
   * Interfacing with human semantic understanding by providing the label in addition to machine-readable links (this is the core of the proxy and present in the base type)
   * Interfacing between complex dedicated applications implementing a specific rich data model like ABCD, and applications for which these needs are peripheral and which need a simple model. I believe, for instance that after separating the issues of protocol, <nop>DarwinCore will remain an important simple interface to collection data, in addition to ABCD.

Perhaps these could be separated. Would it make sense to have the base type (perhaps modified and simplified itself, e.g. using fewer types in Links), and leave the truly immature simple-data interface question out?

I am not sure whether I am ahead (realizing that we need additional interfacing beyond simple guid/uri) or behind times (because the web will become so stable that references are easily retrieved after 100 years) - both is quite possible.

-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 29 July 2004
---

Markus Döring commented on 11. August: "Assume we have always a service which resolves IDs by appending it to the webservice URL: <nop>http://www.bioservice.org/alpinevegetation/426781876 or like this <nop>http://www.bioservice.org/alpinevegetation/getObject?id=426781876. Couldn't we live with a simple proxy object defined just as this: <em>"&lt;Taxon datasource="http://www.bioservice.org/alpinevegetation" id="426781876"&gt;Abies alba Mill.&lt;/Taxon&gt;"</em>?

Gregor Hagedorn: I think the problem is that only a small number of services will be fully under our control (e.g. not publications like <nop>MedLine, geographical gazetteers, molecular sequence databases like <nop>GenBank). This makes it difficult to require such an automatic mapping. However, if I change your proposal to: &lt;Taxon lsid="urn:lsid:www.bioservice.org:alpinevegetation:426781876" id="426781876"&gt;Abies alba Mill.&lt;/Taxon&gt; this is already close to what the proxy base model tries to achieve: a locally referrable id that defines identity even if no external service id is present, a link to the outside, and a human readable label.

Two more problems: a) Most likely at least URL, LSID, and DOI will exist in parallel. That is the only reason why Link is a collection. I personally have no major problem in making it three attributes. It seems a bit artifical, but if that improves acceptance I will gladly endorse it! As you can see in the new UBIF versions (BDI.SDD_.CurrentSchemaVersion) the complex webservice proposal is underscored (starts with "__"), meaning it is tentative and should perhaps be removed. b) Almost all object labels are potentially multilingual. Examples are geographical names, and even the full Agent label often needs transcriptions (Chinese to roman letters) or contains Place names to improve name uniqueness ("Hans Heinrich, Munich" or  "Hans Heinrich, München"?). I believe this is a problem for GBIF, which is already now viewed as being a shop dominated by English speaking countries. And Chinese is the most widely used language on earth... However, providing several languages is impossible with an attribute approach. Can this be better hidden than I do? The proposed model is simply the model used in BDI.SDD_, which throughout is multilingual. For BDI.SDD_ it is easier to keep it as it is, because this responds to generic code.

---

Markus Döring: Is it really required to reference another object using XML validation techniques? I could imagine the above simple proxy model to be used just in place somewhere inside the xml hierarchy and not referencing via xml to global proxy objects. So something like:

<verbatim>
<SDD>
 <Taxon datasource"local" id="123">
  <ScientificName>Abies alba Mill.</ScientificName>
  <HigherTaxon>Pinaceae</HigherTaxon>
  <Genus>Abies</Genus>
  <Synonyms> ... </Synonyms>
  ...
 </Taxon>

 <Taxon datasource"local" id="124">
 ...
 </Taxon>

 <Description datasource"local" id="567">
  <Taxon datasource"local" id="123">Abies alba Mill.</Taxon> 
  <HumanDescription>...</...>
  ...
 </Description>
</SDD>
</verbatim>

I don't very much like to impose the xml ID/IDREF constraints on users (must be document global numbers, which usually means that it is more complicated to output a document, since the numbers have to be created on the fly rather than being able to use or hash existing ids). Some people think that the xml id/idref mechanism should be considered depracated. However, replace in &lt;Taxon datasource"local" id="123"&gt;Abies alba Mill.&lt;/Taxon&gt; "id" with "ref", and it seems you are close to the proxy ref that UBIF is proposing - plus an optional copied Label inside the <nop>ProxyRef. A similar thing is actually proposed in the <nop>MicroAgent (although that is structured) and in the <nop>MicroMeasurementUnit (although again an extra element is present there, which could be removed). I see no problem to generalize this and allow in any place where a proxy ref is expected to have either 
<verbatim>
<Publication ref="123123" />  or 
<Publication ref="123123">Smith & Gordon 1999</Publication>
</verbatim>
The more important distinction at the moment is that in the Micro... types the ref is optional, like in:
<verbatim>
<Publication>Smith & Gordon 1999</Publication>
</verbatim>
I am unclear whether it is desirable to allow this, but it may be possible. If this is the accepted migration path to a truly linked system that is fine. Perhaps one could optionally also allow:
<verbatim>
<Publication language="en">Smith & Gordon 1999</Publication>
</verbatim>
to simplify later migration to full proxy objects.


   * <small>Aside: "Taxon" is a problematic term. Other things than taxa can be collected and described, most notably diseases (the name stands for a taxon x taxon and sometimes region combination). BDI.SDD_/UBIF proposes <nop>ClassName - I realize this conflicts with the class rank term. We can change it to something better...</small>

-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 11 August 2004
---

Note: In the change from UBIF 1.0 beta 14 to beta 15 I have now removed the Webservice-Linking mechanism, see ProxyLinkByWebservice.
-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 13 August 2004


%META:FILEATTACHMENT{name="ProxyTypeOverview.png" attr="h" comment="" date="1085519464" path="C:\Data\Desktop\DESCR\TDWG-SDD\Schema\091\ProxyTypeOverview.png" size="16161" user="GregorHagedorn" version="1.1"}%
%META:TOPICMOVED{by="GregorHagedorn" date="1147083758" from="UBIF.ProxyDataModel" to="UBIF.ObsoleteTopicProxyDataModel"}%
@


1.27
log
@none
@
text
@d1 2
a2 2
%META:TOPICINFO{author="LeeBelbin" date="1258685135" format="1.1" reprev="1.27" version="1.27"}%
%META:TOPICPARENT{name="BDI.SDD"}%
d34 1
a34 1
The proxy architecture is proposed as a generally used architecture for all biodiversity knowledge domains (see ObsoleteProxyListsInAllTdwgGbifStandards). The following is a graphical overview of the use of proxy in the current version of BDI.SDD:
d44 1
a44 1
   * For specimen (<nop>BDI.SDD.Objects) see ProxyDataSpecimen - here especially what would the common name be? Note that here I propose to basically reuse the elements from <nop>DarwinCore after extracting them from their tight coupling into <nop>DiGIR!
d46 1
a46 1
   * Agents: AgentDataModel, also the older: BDI.SDD.WhenAreTwoAgentsTheSame?
d48 1
a48 1
<strong>History and term for the concept:</strong> In version BDI.SDD 0.9 (dec. 2003) <nop>ProxyTypes used to be called <nop>ResourceConnectors. This was considered not intuitive. At the Berlin 2004 meeting the term "proxy" (-data or -type) was accepted by all those present. The term "proxy" is used in the frequently used proxy programming pattern. It refers to the fact that the objects may either be proxies if no external object exists, or proxy cache if the asynchronous external object is temporarily unreachable (see also the earlier WIKI discussion ResolvedTopicConnectorOrProxy).
d77 1
a77 1
Two more problems: a) Most likely at least URL, LSID, and DOI will exist in parallel. That is the only reason why Link is a collection. I personally have no major problem in making it three attributes. It seems a bit artifical, but if that improves acceptance I will gladly endorse it! As you can see in the new UBIF versions (BDI.SDD.CurrentSchemaVersion) the complex webservice proposal is underscored (starts with "__"), meaning it is tentative and should perhaps be removed. b) Almost all object labels are potentially multilingual. Examples are geographical names, and even the full Agent label often needs transcriptions (Chinese to roman letters) or contains Place names to improve name uniqueness ("Hans Heinrich, Munich" or  "Hans Heinrich, München"?). I believe this is a problem for GBIF, which is already now viewed as being a shop dominated by English speaking countries. And Chinese is the most widely used language on earth... However, providing several languages is impossible with an attribute approach. Can this be better hidden than I do? The proposed model is simply the model used in BDI.SDD, which throughout is multilingual. For BDI.SDD it is easier to keep it as it is, because this responds to generic code.
d121 1
a121 1
   * <small>Aside: "Taxon" is a problematic term. Other things than taxa can be collected and described, most notably diseases (the name stands for a taxon x taxon and sometimes region combination). BDI.SDD/UBIF proposes <nop>ClassName - I realize this conflicts with the class rank term. We can change it to something better...</small>
@


1.26
log
@Added topic name via script
@
text
@d1 2
a4 2
%META:TOPICINFO{author="GregorHagedorn" date="1147084970" format="1.1" version="1.25"}%
%META:TOPICPARENT{name="SDD.WebHome"}%
d34 1
a34 1
The proxy architecture is proposed as a generally used architecture for all biodiversity knowledge domains (see ObsoleteProxyListsInAllTdwgGbifStandards). The following is a graphical overview of the use of proxy in the current version of SDD:
d44 1
a44 1
   * For specimen (<nop>SDD.Objects) see ProxyDataSpecimen - here especially what would the common name be? Note that here I propose to basically reuse the elements from <nop>DarwinCore after extracting them from their tight coupling into <nop>DiGIR!
d46 1
a46 1
   * Agents: AgentDataModel, also the older: SDD.WhenAreTwoAgentsTheSame?
d48 1
a48 1
<strong>History and term for the concept:</strong> In version SDD 0.9 (dec. 2003) <nop>ProxyTypes used to be called <nop>ResourceConnectors. This was considered not intuitive. At the Berlin 2004 meeting the term "proxy" (-data or -type) was accepted by all those present. The term "proxy" is used in the frequently used proxy programming pattern. It refers to the fact that the objects may either be proxies if no external object exists, or proxy cache if the asynchronous external object is temporarily unreachable (see also the earlier WIKI discussion ResolvedTopicConnectorOrProxy).
d77 1
a77 1
Two more problems: a) Most likely at least URL, LSID, and DOI will exist in parallel. That is the only reason why Link is a collection. I personally have no major problem in making it three attributes. It seems a bit artifical, but if that improves acceptance I will gladly endorse it! As you can see in the new UBIF versions (SDD.CurrentSchemaVersion) the complex webservice proposal is underscored (starts with "__"), meaning it is tentative and should perhaps be removed. b) Almost all object labels are potentially multilingual. Examples are geographical names, and even the full Agent label often needs transcriptions (Chinese to roman letters) or contains Place names to improve name uniqueness ("Hans Heinrich, Munich" or  "Hans Heinrich, München"?). I believe this is a problem for GBIF, which is already now viewed as being a shop dominated by English speaking countries. And Chinese is the most widely used language on earth... However, providing several languages is impossible with an attribute approach. Can this be better hidden than I do? The proposed model is simply the model used in SDD, which throughout is multilingual. For SDD it is easier to keep it as it is, because this responds to generic code.
d121 1
a121 1
   * <small>Aside: "Taxon" is a problematic term. Other things than taxa can be collected and described, most notably diseases (the name stands for a taxon x taxon and sometimes region combination). SDD/UBIF proposes <nop>ClassName - I realize this conflicts with the class rank term. We can change it to something better...</small>
@


1.25
log
@none
@
text
@d1 2
@


1.24
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1111427309" format="1.0" version="1.24"}%
d7 8
a14 8
	* From the standpoint of a biodiversity dataset many objects from other knowledge domains need to be addressed, such as publications, geographical locations from gazetteers, agents (organisation, person, software) and media libraries (e.&nbsp;g. images in different resolutions and with captions in multiple languages).
	* From a specific biodiversity dataset, the same in true for other biodiversity knowledge domains. For example, descriptive data need class (taxon) names, class hierarchies, references to specimens/units.
	* Three conventional methods exist to deal with this situation:
		1 Ignore the problem and pretend the external objects can be represented by a simple human readable string (publication, person name, taxon name), disregarding the fact that this only allows humans to guess identity and prevents integration of different datasets. Unions of such sets can be queried using fuzzy query operators, but datasets cannot be joined - e.&nbsp;g. not <nop>GenBank sequences with ABCD specimen and GLOPP host-parasite interaction data.
		2 Realize the problem and provide a internal object representation that is specific to the application. Thus Specify is also a literature database, <nop>DarwinCore and ABCD have geography and taxon name models, the <nop>TaxonConcept schema proposes to use the <nop>EndNote literature information model. These methods do not allow to truly reference external object providers.
		3 Use a URL web address. This has two major problems: 
			* It may break and then not only the link is lost, but also often the semantics of the referencing object (a descriptions claiming to describe "http://x.y.org/taxon?ID=234764" is worthless).
			* Although most objects can be provided some are not available. No external taxonomic name service will ever be able to provide all, including new taxon names so that they can be described.
d17 3
a19 3
	* Label (potentially in multiple languages) that is expected to capture the semantics of the object (make it recognizable to humans outside of the referring context). This implies a desire to be globally unique, which cannot be guaranteed however. The Label is required.
	* Links using several linking concepts including LSID, DOI, direct URLs, or perhaps web service definitions. The Links are optional and will be missing when no external object exists yet.
	* a key attribute that allows a proxy object to be referenced multiple times within an xml document.
d24 1
a24 1
	* <small>Jerry Cooper writes: <em>"Finally, I will make a prediction... In two years time we will decide that we urgently need a standard for describing literature because [...] we need a mechanism for sharing ‘literature objects’. The data structures for storing literature references in many databases are inadequate and people will have a lot of future work in order to standardise them. However, a standard already exists, MARC, and, although it is based on flat data, at least it atomizes and tags the components logically (and is actually quite easy to re-model into a hierarchical structure). We really do need to think about this now and be encouraging digitizers to treat literature data with respect and not dump it into a string! The ‘SimpleCitation’ object in this schema is a MARC subset."</em> -- I agree. It would be highly valuable if the standard tracks coming up for the TDWG meeting in NZ would already all agree on a common publication-specific extension of a general linking model!</small>
d26 1
a26 1
	* <small>See also the useful comments on Publications in http://circa.gbif.net/Public/irc/gbif/dadi/newsgroups?n=names&a=re&art=27</small>
d32 1
a32 1
The proxy architecture is proposed as a generally used architecture for all biodiversity knowledge domains (see UseProxyListsInAllTdwgGbifStandards). The following is a graphical overview of the use of proxy in the current version of SDD:
d42 3
a44 3
	* For specimen (<nop>SDD.Objects) see ProxyDataSpecimen - here especially what would the common name be? Note that here I propose to basically reuse the elements from <nop>DarwinCore after extracting them from their tight coupling into <nop>DiGIR!
	* For images (<nop>MediaResourceProxy) see ProxyDataMediaResource.
	* Agents: AgentDataModel, also the older: SDD.WhenAreTwoAgentsTheSame?
d54 1
a54 1
	* In general I think that the proxy idea is a good one but we need serious work to get general buy-in for the idea and to make sure that the specifics are right.  I would say therefore that we should avoid presenting it as a core part of UBIF right now.  We need something to occupy this position, but it may be simpler to move the whole problem out of the data modeling issue by using GUIDs to reference external data resources and elements and to rely on external services to provide data on the various access methods and formats.  Anything we put in the XML may be invalidated at any time.  Keeping track on location-independent GUIDs may be a simpler idea.  I certainly think we need to float the problem and the alternatives in Christchurch but I would take all of the Proxies out of version 1 of UBIF. I realise you've put a lot of effort into this, but I think it is still too speculative to become part of the standard core.
d61 2
a62 2
	* Interfacing with human semantic understanding by providing the label in addition to machine-readable links (this is the core of the proxy and present in the base type)
	* Interfacing between complex dedicated applications implementing a specific rich data model like ABCD, and applications for which these needs are peripheral and which need a simple model. I believe, for instance that after separating the issues of protocol, <nop>DarwinCore will remain an important simple interface to collection data, in addition to ABCD.
d119 1
a119 1
	* <small>Aside: "Taxon" is a problematic term. Other things than taxa can be collected and described, most notably diseases (the name stands for a taxon x taxon and sometimes region combination). SDD/UBIF proposes <nop>ClassName - I realize this conflicts with the class rank term. We can change it to something better...</small>
d127 1
d129 1
a129 1
%META:TOPICMOVED{by="GregorHagedorn" date="1089915488" from="SDD.ProxyDataModel" to="UBIF.ProxyDataModel"}%
@


1.23
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1099308522" format="1.0" version="1.23"}%
d3 124
a126 124
(This is part of the UBIF.SchemaDiscussion discussion. See also InterfaceDiscussion. The name for the section contain Agent, Publication, etc. Proxy objects in the TopLevelStructure is discussed under NameForProxyOrInterfaceSection.)
---

Fundamentals: 
	* From the standpoint of a biodiversity dataset many objects from other knowledge domains need to be addressed, such as publications, geographical locations from gazetteers, agents (organisation, person, software) and media libraries (e.&nbsp;g. images in different resolutions and with captions in multiple languages).
	* From a specific biodiversity dataset, the same in true for other biodiversity knowledge domains. For example, descriptive data need class (taxon) names, class hierarchies, references to specimens/units.
	* Three conventional methods exist to deal with this situation:
		1 Ignore the problem and pretend the external objects can be represented by a simple human readable string (publication, person name, taxon name), disregarding the fact that this only allows humans to guess identity and prevents integration of different datasets. Unions of such sets can be queried using fuzzy query operators, but datasets cannot be joined - e.&nbsp;g. not <nop>GenBank sequences with ABCD specimen and GLOPP host-parasite interaction data.
		2 Realize the problem and provide a internal object representation that is specific to the application. Thus Specify is also a literature database, <nop>DarwinCore and ABCD have geography and taxon name models, the <nop>TaxonConcept schema proposes to use the <nop>EndNote literature information model. These methods do not allow to truly reference external object providers.
		3 Use a URL web address. This has two major problems: 
			* It may break and then not only the link is lost, but also often the semantics of the referencing object (a descriptions claiming to describe "http://x.y.org/taxon?ID=234764" is worthless).
			* Although most objects can be provided some are not available. No external taxonomic name service will ever be able to provide all, including new taxon names so that they can be described.

To solve these problems I propose to consistently use a class of objects called proxy data. These primarily have very simple representation of an object composed of 
	* Label (potentially in multiple languages) that is expected to capture the semantics of the object (make it recognizable to humans outside of the referring context). This implies a desire to be globally unique, which cannot be guaranteed however. The Label is required.
	* Links using several linking concepts including LSID, DOI, direct URLs, or perhaps web service definitions. The Links are optional and will be missing when no external object exists yet.
	* a key attribute that allows a proxy object to be referenced multiple times within an xml document.
Together with a developer Annotation and extensibility containers (Ext and <nop>CustomExtensions) this constitutes the base functionality of the <nop>ProxyData type.

In addition, each kind of proxy data class may contain extensions providing additional, more detailled data. To discuss both the base proxy elements and such extensions, I propose to discuss publications. This is external data to all currently active groups and is of similar importance to most biodiversity groups. Also it is obvious that no external publication database will ever fully provide the needs of scientists both citing difficult-to-find 200 year old literature and publications that have just appeared.

	* <small>Jerry Cooper writes: <em>"Finally, I will make a prediction... In two years time we will decide that we urgently need a standard for describing literature because [...] we need a mechanism for sharing ‘literature objects’. The data structures for storing literature references in many databases are inadequate and people will have a lot of future work in order to standardise them. However, a standard already exists, MARC, and, although it is based on flat data, at least it atomizes and tags the components logically (and is actually quite easy to re-model into a hierarchical structure). We really do need to think about this now and be encouraging digitizers to treat literature data with respect and not dump it into a string! The ‘SimpleCitation’ object in this schema is a MARC subset."</em> -- I agree. It would be highly valuable if the standard tracks coming up for the TDWG meeting in NZ would already all agree on a common publication-specific extension of a general linking model!</small>

	* <small>See also the useful comments on Publications in http://circa.gbif.net/Public/irc/gbif/dadi/newsgroups?n=names&a=re&art=27</small>

So in &gt; &gt; <strong> ProxyDataPublication</strong> &lt; &lt; please discuss both the basics of Proxies and the specifics of reference models!

---

The proxy architecture is proposed as a generally used architecture for all biodiversity knowledge domains (see UseProxyListsInAllTdwgGbifStandards). The following is a graphical overview of the use of proxy in the current version of SDD:

<p style="text-align:center"><img src="%ATTACHURLPATH%/ProxyTypeOverview.png" alt="ProxyTypeOverview.png" /></p>

I personally believe that proxy data objects are what the GBIF indexer should be built upon. A data provider that participates in GBIF could export all internal objects into a <nop>ProxyData object, mapping the local complex data model to the shared data model. This is similar to the flat representations that <nop>DiGIR uses, with the slight difference that they are not exclusively coupled to a query protocol, but can also be used to cache data locally. This would be ideal as a basis for the GBIF indexer.

---

Other proxy discussions (except ProxyDataPublication):

	* For specimen (<nop>SDD.Objects) see ProxyDataSpecimen - here especially what would the common name be? Note that here I propose to basically reuse the elements from <nop>DarwinCore after extracting them from their tight coupling into <nop>DiGIR!
	* For images (<nop>MediaResourceProxy) see ProxyDataMediaResource.
	* Agents: ProxyDataAgent, also the older: SDD.WhenAreTwoAgentsTheSame?

<strong>History and term for the concept:</strong> In version SDD 0.9 (dec. 2003) <nop>ProxyTypes used to be called <nop>ResourceConnectors. This was considered not intuitive. At the Berlin 2004 meeting the term "proxy" (-data or -type) was accepted by all those present. The term "proxy" is used in the frequently used proxy programming pattern. It refers to the fact that the objects may either be proxies if no external object exists, or proxy cache if the asynchronous external object is temporarily unreachable (see also the earlier WIKI discussion ResolvedTopicConnectorOrProxy).
 
-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 18 June 2004

---

Donald Hobern commented in email:

	* In general I think that the proxy idea is a good one but we need serious work to get general buy-in for the idea and to make sure that the specifics are right.  I would say therefore that we should avoid presenting it as a core part of UBIF right now.  We need something to occupy this position, but it may be simpler to move the whole problem out of the data modeling issue by using GUIDs to reference external data resources and elements and to rely on external services to provide data on the various access methods and formats.  Anything we put in the XML may be invalidated at any time.  Keeping track on location-independent GUIDs may be a simpler idea.  I certainly think we need to float the problem and the alternatives in Christchurch but I would take all of the Proxies out of version 1 of UBIF. I realise you've put a lot of effort into this, but I think it is still too speculative to become part of the standard core.

My comments: Moving things out is the general trend on the web, but I am very wary about this. I am very much in favor of federating data, collaborating and using IDs to link information. However, I believe data streams and documents should maintain a sense of continuity and preserve the semantics of links for human consumption. This is the essential model of printed books and libraries - and it is one of the foundations of science.

Imagine printed scientific articles - instead of giving human readable references - refer to some GUID code that you can enter into the computer and then obtain the information. This is the current state on the web. Unfortunately, we all know that institutions, even if well managed, change. Data citing specimens solely by case numbers used at a given time in a specific collection may become worthless after some restructuring. In our institution we find that the knowledge of coded references that was preserved over decades, often disappears with retirement of colleagues and valuable data become trash.

So when talking about proxies I have two interfaces in mind:
	* Interfacing with human semantic understanding by providing the label in addition to machine-readable links (this is the core of the proxy and present in the base type)
	* Interfacing between complex dedicated applications implementing a specific rich data model like ABCD, and applications for which these needs are peripheral and which need a simple model. I believe, for instance that after separating the issues of protocol, <nop>DarwinCore will remain an important simple interface to collection data, in addition to ABCD.

Perhaps these could be separated. Would it make sense to have the base type (perhaps modified and simplified itself, e.g. using fewer types in Links), and leave the truly immature simple-data interface question out?

I am not sure whether I am ahead (realizing that we need additional interfacing beyond simple guid/uri) or behind times (because the web will become so stable that references are easily retrieved after 100 years) - both is quite possible.

-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 29 July 2004
---

Markus Döring commented on 11. August: "Assume we have always a service which resolves IDs by appending it to the webservice URL: <nop>http://www.bioservice.org/alpinevegetation/426781876 or like this <nop>http://www.bioservice.org/alpinevegetation/getObject?id=426781876. Couldn't we live with a simple proxy object defined just as this: <em>"&lt;Taxon datasource="http://www.bioservice.org/alpinevegetation" id="426781876"&gt;Abies alba Mill.&lt;/Taxon&gt;"</em>?

Gregor Hagedorn: I think the problem is that only a small number of services will be fully under our control (e.g. not publications like <nop>MedLine, geographical gazetteers, molecular sequence databases like <nop>GenBank). This makes it difficult to require such an automatic mapping. However, if I change your proposal to: &lt;Taxon lsid="urn:lsid:www.bioservice.org:alpinevegetation:426781876" id="426781876"&gt;Abies alba Mill.&lt;/Taxon&gt; this is already close to what the proxy base model tries to achieve: a locally referrable id that defines identity even if no external service id is present, a link to the outside, and a human readable label.

Two more problems: a) Most likely at least URL, LSID, and DOI will exist in parallel. That is the only reason why Link is a collection. I personally have no major problem in making it three attributes. It seems a bit artifical, but if that improves acceptance I will gladly endorse it! As you can see in the new UBIF versions (SDD.CurrentSchemaVersion) the complex webservice proposal is underscored (starts with "__"), meaning it is tentative and should perhaps be removed. b) Almost all object labels are potentially multilingual. Examples are geographical names, and even the full Agent label often needs transcriptions (Chinese to roman letters) or contains Place names to improve name uniqueness ("Hans Heinrich, Munich" or  "Hans Heinrich, München"?). I believe this is a problem for GBIF, which is already now viewed as being a shop dominated by English speaking countries. And Chinese is the most widely used language on earth... However, providing several languages is impossible with an attribute approach. Can this be better hidden than I do? The proposed model is simply the model used in SDD, which throughout is multilingual. For SDD it is easier to keep it as it is, because this responds to generic code.

---

Markus Döring: Is it really required to reference another object using XML validation techniques? I could imagine the above simple proxy model to be used just in place somewhere inside the xml hierarchy and not referencing via xml to global proxy objects. So something like:

<verbatim>
<SDD>
 <Taxon datasource"local" id="123">
  <ScientificName>Abies alba Mill.</ScientificName>
  <HigherTaxon>Pinaceae</HigherTaxon>
  <Genus>Abies</Genus>
  <Synonyms> ... </Synonyms>
  ...
 </Taxon>

 <Taxon datasource"local" id="124">
 ...
 </Taxon>

 <Description datasource"local" id="567">
  <Taxon datasource"local" id="123">Abies alba Mill.</Taxon> 
  <HumanDescription>...</...>
  ...
 </Description>
</SDD>
</verbatim>

I don't very much like to impose the xml ID/IDREF constraints on users (must be document global numbers, which usually means that it is more complicated to output a document, since the numbers have to be created on the fly rather than being able to use or hash existing ids). Some people think that the xml id/idref mechanism should be considered depracated. However, replace in &lt;Taxon datasource"local" id="123"&gt;Abies alba Mill.&lt;/Taxon&gt; "id" with "ref", and it seems you are close to the proxy ref that UBIF is proposing - plus an optional copied Label inside the <nop>ProxyRef. A similar thing is actually proposed in the <nop>MicroAgent (although that is structured) and in the <nop>MicroMeasurementUnit (although again an extra element is present there, which could be removed). I see no problem to generalize this and allow in any place where a proxy ref is expected to have either 
<verbatim>
<Publication ref="123123" />  or 
<Publication ref="123123">Smith & Gordon 1999</Publication>
</verbatim>
The more important distinction at the moment is that in the Micro... types the ref is optional, like in:
<verbatim>
<Publication>Smith & Gordon 1999</Publication>
</verbatim>
I am unclear whether it is desirable to allow this, but it may be possible. If this is the accepted migration path to a truly linked system that is fine. Perhaps one could optionally also allow:
<verbatim>
<Publication language="en">Smith & Gordon 1999</Publication>
</verbatim>
to simplify later migration to full proxy objects.


	* <small>Aside: "Taxon" is a problematic term. Other things than taxa can be collected and described, most notably diseases (the name stands for a taxon x taxon and sometimes region combination). SDD/UBIF proposes <nop>ClassName - I realize this conflicts with the class rank term. We can change it to something better...</small>

-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 11 August 2004
---

Note: In the change from UBIF 1.0 beta 14 to beta 15 I have now removed the Webservice-Linking mechanism, see ProxyLinkByWebservice.
-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 13 August 2004

@


1.22
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1094115745" format="1.0" version="1.22"}%
d3 1
a3 1
(This is part of the UBIF.SchemaDiscussion discussion. See also InterfaceDiscussion)
d124 1
a124 1
Note: In the change from UBIF 1.0 beta 14 to beta 15 I have now removed the Webservice-Linking mechnanism, see ProxyLinkByWebservice.
@


1.21
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1092401002" format="1.0" version="1.21"}%
d3 1
a3 1
(This is part of the UBIF.SchemaDiscussion discussion)
d125 2
a126 2
-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 13 August 2004

@


1.20
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1092254880" format="1.0" version="1.20"}%
a116 1
---
d118 2
a119 1
<small>Aside: "Taxon" is a problematic term. Other things than taxa can be collected and described, most notably diseases (the name stands for a taxon x taxon and sometimes region combination). SDD/UBIF proposes <nop>ClassName - I realize this conflicts with the class rank term. We can change it to something better...</small>
d122 4
a125 1
---
@


1.19
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1091106114" format="1.0" version="1.19"}%
d68 52
d121 3
a123 1
-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 29 July 2004
@


1.18
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1089974760" format="1.0" version="1.18"}%
d50 20
@


1.17
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1089914760" format="1.0" version="1.17"}%
d42 3
a44 3
	* For specimen (<nop>SDD.Objects) see SDD.ProxyDataSpecimen - here especially what would the common name be? Note that here I propose to basically reuse the elements from <nop>DarwinCore after extracting them from their tight coupling into <nop>DiGIR!
	* For images (<nop>MediaResourceProxy) see SDD.ProxyDataMediaResource.
	* Agents: SDD.ProxyDataAgent, also the older: SDD.WhenAreTwoAgentsTheSame?
d46 1
a46 1
<strong>History and term for the concept:</strong> In version SDD 0.9 (dec. 2003) <nop>ProxyTypes used to be called <nop>ResourceConnectors. This was considered not intuitive. At the Berlin 2004 meeting the term "proxy" (-data or -type) was accepted by all those present. The term "proxy" is used in the frequently used proxy programming pattern. It refers to the fact that the objects may either be proxies if no external object exists, or proxy cache if the asynchronous external object is temporarily unreachable (see also the earlier WIKI discussion SDD.ResolvedTopicConnectorOrProxy).
@


1.16
log
@none
@
text
@d1 3
a3 3
%META:TOPICINFO{author="GregorHagedorn" date="1088009590" format="1.0" version="1.16"}%
%META:TOPICPARENT{name="WebHome"}%
(This is part of the UnifiedBioInfoFramework discussion)
d42 3
a44 3
	* For specimen (<nop>SDD.Objects) see ProxyDataSpecimen - here especially what would the common name be? Note that here I propose to basically reuse the elements from <nop>DarwinCore after extracting them from their tight coupling into <nop>DiGIR!
	* For images (<nop>MediaResourceProxy) see ProxyDataMediaResource.
	* Agents: ProxyDataAgent, also the older: WhenAreTwoAgentsTheSame?
d46 1
a46 1
<strong>History and term for the concept:</strong> In version SDD 0.9 (dec. 2003) <nop>ProxyTypes used to be called <nop>ResourceConnectors. This was considered not intuitive. At the Berlin 2004 meeting the term "proxy" (-data or -type) was accepted by all those present. The term "proxy" is used in the frequently used proxy programming pattern. It refers to the fact that the objects may either be proxies if no external object exists, or proxy cache if the asynchronous external object is temporarily unreachable (see also the earlier WIKI discussion ResolvedTopicConnectorOrProxy).
d51 1
@


1.15
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1087568100" format="1.0" version="1.15"}%
d26 2
@


1.14
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1086948950" format="1.0" version="1.14"}%
d6 15
a20 1
In version SDD 0.9 (dec. 2003) <nop>ProxyTypes used to be called <nop>ResourceConnectors. This was considered not intuitive. At the Berlin 2004 meeting the term "proxy" (-data or -type) was accepted by all those present. The term "proxy" is used in the frequently used proxy programming pattern. It refers to the fact that the objects may either be proxies if no external object exists, or proxy cache if the asynchronous external object is temporarily unreachable (see also the earlier WIKI discussion ResolvedTopicConnectorOrProxy).
d22 1
a22 1
The proxy architecture is proposed as a generally used architecture for all biodiversity knowledge domains. The following is a graphical overview of the use of proxy in the current version of SDD:
d24 1
a24 1
<p style="text-align:center"><img src="%ATTACHURLPATH%/ProxyTypeOverview.png" alt="ProxyTypeOverview.png" /></p>
d26 1
a26 1
A general note here: When we decide to use proxys in all TDWG/GBIF standards, we may have to revise the SDD-centric split between <em>Entities</em> and <em>Resources</em>; see UseProxyListsInAllTdwgGbifStandards (please help to find the right name for it as soon as possible!).
d30 1
a30 1
I believe the best strategy to discuss the architecture is to discuss an example and I propose publications. This is external data to all currently active groups and is of similar importance to most biodiversity groups. Also it is obvious that no external publication database will ever fully provide the needs of scientists both citing difficult-to-find 200 year old literature and publications that have just appeared.
d32 1
a32 3
Jerry Cooper writes: <em>"Finally, I will make a prediction... In two years time we will decide that we urgently need a standard for describing literature because [...] we need a mechanism for sharing ‘literature objects’. The data structures for storing literature references in many databases are inadequate and people will have a lot of future work in order to standardise them. However, a standard already exists, MARC, and, although it is based on flat data, at least it atomizes and tags the components logically (and is actually quite easy to re-model into a hierarchical structure). We really do need to think about this now and be encouraging digitizers to treat literature data with respect and not dump it into a string! The ‘SimpleCitation’ object in this schema is a MARC subset."</em>

I agree. It would be highly valuable if the standard tracks coming up for the TDWG meeting in NZ would already all agree on a common publication-specific extension of a general linking model. So in 
d34 1
a34 3
	* <strong> ProxyDataPublication</strong> 

please discuss both the basics of Proxies and the specifics of reference models!
d38 1
a38 1
Other proxy discussions:
d40 1
a41 1
	* For specimen (<nop>SDD.Objects) see ProxyDataSpecimen - here especially what would the common name be?
d43 2
d46 1
a46 1
-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 28 May 2004
@


1.13
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1086848820" format="1.0" version="1.13"}%
d3 1
a3 1
(This is part of the OverarchingPatternsForTdwgSchemata discussion)
@


1.12
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1086530444" format="1.0" version="1.12"}%
d22 1
a22 1
	* <strong> ProxyDataPublicationProxy</strong> 
d32 1
a32 1
	* Agents: ProxyDataAgentProxy, also the older: WhenAreTwoAgentsTheSame?
@


1.11
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1086356127" format="1.0" version="1.11"}%
d32 1
a32 1
	* Agents: WhenAreTwoAgentsTheSame?
@


1.10
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1086108827" format="1.0" version="1.10"}%
d3 3
@


1.9
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1085755254" format="1.0" version="1.9"}%
d17 5
a21 1
I agree. It would be highly valuable if the standard tracks coming up for the TDWG meeting in NZ would already all agree on a common publication-specific extension of a general linking model. So in <strong> ProxyDataPublicationProxy</strong> please discuss both the basics of Proxies and the specifics of reference models!
d31 2
a32 2
-- [[Main.GregorHagedorn][Gregor Hagedorn]] - 28 May 2004

@


1.8
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1085751335" format="1.0" version="1.8"}%
d25 4
a28 3

-- Gregor Hagedorn - 28 May 2004

@


1.7
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1085746194" format="1.0" version="1.7"}%
d24 1
d26 1
a26 1
-- Gregor Hagedorn - 25 May 2004
@


1.6
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1085742183" format="1.0" version="1.6"}%
d3 1
a3 1
In version SDD 0.9 (dec. 2003) <nop>ProxyTypes used to be called <nop>ResourceConnectors. This was considered not intuitive. At the Berlin 2004 meeting the term "proxy" (-data or -type) was accepted by all those present. The term "proxy" is used in the frequently used proxy programming pattern. It refers to the fact that the objects may either be proxies if no external object exists, or proxy cache if the asynchronous external object is temporarily unreachable (see also the earlier WIKI discussion ConnectorOrProxy).
@


1.5
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1085519640" format="1.0" version="1.5"}%
d9 2
d13 1
a13 3
I believe the best strategy to discuss the architecture is to discuss an example and I propose publications. This is external data to all
currently active groups and is of similar importance to most biodiversity groups. Also it is obvious that no external publication database
will ever fully provide the needs of scientists both citing difficult-to-find 200 year old literature and publications that have just appeared.
d25 2
a26 2
-- Gregor Hagedorn - 25 May 2004

@


1.4
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1085491594" format="1.0" version="1.4"}%
d3 1
a3 1
I plan to put some general notes on the proxy data / proxy object architecture proposed by SDD. Any discussion is already appreciated before that happens!
d5 1
a5 1
Let's use the publication proxy type as an example to study the proxy model in detail. Also, it would be highly valuable if we could all agree on a common publication-specific extension (i.e. a micro-reference model). Please see ProxyDataPublicationProxy.
d7 1
a7 1
On proxies for images (<nop>MediaResourceProxy) see ProxyDataMediaResource.
d9 1
a9 1
-- Gregor Hagedorn - 24 May 2004
d11 17
@


1.3
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RobBuis" date="1085487180" format="1.0" version="1.3"}%
d5 3
a7 1
ProxyDataPublicationProxy 
a10 5
About Proxy Objects, this seems a fine concept for taxonomic names etc. However, I wonder what the practical implications are for using images? Caching/embedding images can potentially increase document size very rapidly, so I wonder what the SDD opinion is on using embedded images?
Also is it easy to store binary data in XML? Is there one way or more ways to do that? If there are multiple, which one does SDD favour?

-- Rob Buis - 25 May 2004

@


1.2
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="GregorHagedorn" date="1085483160" format="1.0" version="1.2"}%
d8 6
@


1.1
log
@none
@
text
@d1 2
a2 2
%META:TOPICINFO{author="GregorHagedorn" date="1085396162" format="1.0" version="1.1"}%
%META:TOPICPARENT{name="TopLevelStructure"}%
d5 2
@
