head	1.22;
access;
symbols;
locks; strict;
comment	@# @;


1.22
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.21;

1.21
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.20;

1.20
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.19;

1.19
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.18;

1.18
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.17;

1.17
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.16;

1.16
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.15;

1.15
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.14;

1.14
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.13;

1.13
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.12;

1.12
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.11;

1.11
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.10;

1.10
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.9;

1.9
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.8;

1.8
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.7;

1.7
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.6;

1.6
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.2;

1.2
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	;


desc
@Initial revision
@


1.22
log
@Revision 22
@
text
@---+ Protocol Features

*What kind of features are required or desired for the next protocol?*


   * ProtocolFeaturesRequestMethods: What kind of methods are needed by clients, portals, interfaces to access datasources easily?

   * ProtocolFeaturesAccessPoint: What is an access point? Do we need to include addressing of "subdomains" like DiGIR resources into the protocol? If so, how can we address these different datasources?

   * ProtocolFeaturesSupportedSchemas: What kind of schemas and schema features need to be supported?

   * ProtocolFeaturesFilterOperators: What logical/comparative operators would be useful?

   * ProtocolFeaturesSubstitutionGroup: Dedicated to the explanation of substitution groups and its limitations.

   * ProtocolFeaturesProtocolHeader: What information should the header contain?

   * See ConceptualBinding for a discussion about how to bind concepts to data

   * ProtocolFeaturesReturnedErrorCodes: Specification of a basic set of error codes to be used by processing software

   * ProtocolFeaturesResponseCreationInstructions: Set of instructions on how to treat unclear situations when creating a response, e.g. how to deal with not mapped concepts in filters.

   * SOAP: What does it need for the protocol to be compliant with SOAP or XML-RPC. See the ThirdProposal based on SOAP.
@


1.21
log
@Revision 21
@
text
@d18 1
a18 1
   * See DifferencesInConceptualBinding for a discussion about how to bind concepts to data
@


1.20
log
@Revision 20
@
text
@d24 1
a24 1
   * SOAP: How compliant is the protocol with SOAP or XML-RPC. Can we use SOAP for it? See the ThirdProposal based on SOAP.
@


1.19
log
@Revision 19
@
text
@d24 1
a24 1
   * ProtocolFeaturesSoapBasedProtocol: How compliant is the protocol with SOAP or XML-RPC. Can we use SOAP for it?
@


1.18
log
@Revision 18
@
text
@d24 1
a24 1
   * ProtocolFeaturesProtocolBasedOnSoap: How compliant is the protocol with SOAP or XML-RPC. Can we use SOAP for it?
@


1.17
log
@Revision 17
@
text
@d12 2
@


1.16
log
@Revision 16
@
text
@d8 1
a8 1
   * ProtocolFeaturesAccessPoint: What is an access point? To we need to include adressing of "subdomains" like DiGIR resources into the protocol? If so, how can we adress these different datasources?
d10 1
a10 1
   * ProtocolFeaturesSupportedSchemas: What kind of schemas and schema features are needed to be supported?
@


1.15
log
@Revision 15
@
text
@a13 2
   * ProtocolFeaturesProtocolBackboneStructure: How should the protocol schema be structured

@


1.14
log
@Revision 14
@
text
@d24 1
a24 1
   * ProtocolFeaturesProtocolBasedOnSOAP: How compliant is the protocol with SOAP or XML-RPC. Can we use SOAP for it?
@


1.13
log
@Revision 13
@
text
@d24 1
a24 1
   * ProtocolFeaturesSOAPBasedProtocol: How compliant is the protocol with SOAP or XML-RPC. Can we use SOAP for it?
@


1.12
log
@Revision 12
@
text
@d23 2
@


1.11
log
@Revision 11
@
text
@d21 2
@


1.10
log
@Revision 10
@
text
@d19 2
@


1.9
log
@Revision 9
@
text
@d8 1
a8 1
   * ProtocolFeaturesAccessPoint: What is an access point? To we need to include adressing of "subdomains" like DiGIR resources into the protocol? If so, how can we adress different datasources?
@


1.8
log
@Revision 8
@
text
@d17 2
@


1.7
log
@Revision 7
@
text
@d14 3
a16 1
   * ProtocolFeaturesWritingMethods: Do we need new methods to write back into a database, e.g. for annotations?
@


1.6
log
@Revision 6
@
text
@d1 1
a1 1
---+ Needed Protocol Features
@


1.5
log
@Revision 5
@
text
@d14 1
a14 1
   * ProtocolFeaturesWritingMethod: Do we need a new method to write back into a database, e.g. for annotations?
@


1.4
log
@Revision 4
@
text
@d6 1
a6 1
<br>/RequestMethods: What kind of methods are needed by clients, portals, interfaces to access datasources easily?
d8 1
a8 1
<br>/AccessPoint: What is an access point? To we need to include adressing of "subdomains" like DiGIR resources into the protocol? If so, how can we adress different datasources?
d10 1
a10 1
<br>/SupportedSchemas: What kind of schemas and schema features are needed to be supported?
d12 3
a14 1
<br>/SubstitutionGroup: Dedicated to the explanation of substitution groups and its limitations.
@


1.3
log
@Revision 3
@
text
@d3 1
a3 1
What kind of features are required or desired for the next protocol?
@


1.2
log
@Revision 2
@
text
@a4 1
Please add to the following:
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
<br>ProtocolFeatures/RequestMethods: What kind of methods are needed by clients, portals, interfaces to access datasources easily?
d9 1
a9 1
<br>ProtocolFeatures/Resources: How to address different datasources ProtocolFeatures DiGIR resources?
d11 1
a11 1
<br>ProtocolFeatures/SupportedSchemas: What kind of schemas and schema features are needed to be supported?
d13 1
a13 1
<br>ProtocolFeatures/SubstitutionGroup: Dedicated to the explanation of substitution groups and its limitations.
@
