head	1.9;
access;
symbols;
locks; strict;
comment	@# @;
expand	@o@;


1.9
date	2011.04.01.10.44.24;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.8;

1.8
date	2008.11.22.14.15.52;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.7;

1.7
date	2008.11.22.12.42.31;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.6;

1.6
date	2008.09.26.18.43.27;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.5;

1.5
date	2007.12.27.18.42.00;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.03.01.03.11;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.24.22.06.13;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.09.22.32.46;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.28.23.23.38;	author RenatoDeGiovanni;	state Exp;
branches;
next	;


desc
@none
@


1.9
log
@none
@
text
@%META:TOPICINFO{author="RenatoDeGiovanni" date="1301654664" format="1.1" version="1.9"}%
%META:TOPICPARENT{name="RoadMap"}%
*Description:* TapirLink is a generic TAPIR provider software based on the [[DigirProvider][PHP DiGIR provider]] (note: TapirLink is only compatible with TAPIR, not DiGIR). It uses the PHP ADOdb library to access different types of relational databases. A single instance of TapirLink can provide access to multiple TAPIR resources, each one with its own service address. TapirLink allows each resource to map one or more data abstraction layers. Search responses can be returned in many different formats, although only tabular (denormalized) data can be served.

*Documentation:* TapirLinkManual

*Download:* http://sourceforge.net/project/showfiles.php?group_id=38190&package_id=217873

*Subversion repository:* https://digir.svn.sourceforge.net/svnroot/digir/tapirlink

*Language:* PHP (compatible with PHP4 and PHP5).

*Developers:* RenatoDeGiovanni, DaveVieglais, CraigWieczorek, KevinRichards, RogerHyam

*Features:*

   * All TAPIR operations (metadata, capabilities, inventory, search and ping). 
   * KVP and XML request encodings.
   * Inventories on any mapped concepts.
   * Searches with any output models involving concepts from mapped schemas.
   * Response structures with basicSchemaLanguage.
   * Log only requests.
   * Complete filter parsing. "Equals" and "like" can be case sensitive or not.
   * Control over maximum element repetitions and maximum element levels.
   * Multiple resources can be exposed from a single TapirLink instance.
   * Each resource can map one or more data abstraction layers.
   * User-friendly web configuration interface including a UDDI registration form and the possibility to import DiGIR configuration.
   * A simple client (tapir_client.php) for testing.
   * Embedded LSID resolver.
   * Possibility to set up XSLT skins to display XML responses in a user-friendly way.
   * Automatic updates.@


1.8
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1227363352" format="1.1" version="1.8"}%
d5 2
@


1.7
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1227357751" format="1.1" version="1.7"}%
d28 2
a29 1
   * Possibility to set up XSLT skins to display XML responses in a user-friendly way.@


1.6
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1222454607" format="1.1" version="1.6"}%
d3 1
a3 1
*Description:* TapirLink is a generic TAPIR provider software based on the [[DigirProvider][PHP DiGIR provider]] (note: TapirLink is only compatible with TAPIR, not DiGIR). It uses the PHP ADOdb library to access different types of relational databases. A single instance of TapirLink can provide access to multiple TAPIR resources, each one with its own address. TapirLink allows each resource to map one or more conceptual schemas following the DarwinCore pattern, but the idea is that each resource will only be able to serve instances of a single "class" or "entity". In other words, when mapping multiple conceptual schemas, each mapped concept will actually refer to an "attribute" or "property" of the same underlying class.
d18 1
a18 1
   * Searches with any output models involving concepts from mapped  schemas.
d24 1
a24 1
   * Each resource can map one or more conceptual schemas based on the new DarwinCore pattern.
d27 2
a28 1
   * Embedded LSID resolver.@


1.5
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1198780920" format="1.1" reprev="1.5" version="1.5"}%
d3 1
a3 1
*Description:* TapirLink is a generic TAPIR provider software based on the DiGIR PHP provider (note: TapirLink is only compatible with TAPIR, not DiGIR). It uses the PHP ADOdb library to access different types of relational databases. A single instance of TapirLink can provide access to multiple TAPIR resources, each one with its own address. TapirLink allows each resource to map one or more conceptual schemas following the DarwinCore pattern, but the idea is that each resource will only be able to serve instances of a single "class" or "entity". In other words, when mapping multiple conceptual schemas, each mapped concept will actually refer to an "attribute" or "property" of the same underlying class.
d27 1
a27 1
   * Embedded LSID resolver.
@


1.4
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1183424591" format="1.1" reprev="1.4" version="1.4"}%
d3 1
a3 1
*Developers:* RenatoDeGiovanni, DaveVieglais, CraigWieczorek, KevinRichards, RogerHyam
d5 1
a5 1
*Availability/Location:* Available at http://sourceforge.net/project/showfiles.php?group_id=38190&package_id=217873
d9 1
a9 1
*Language:* PHP
d11 1
a11 4
*Description:* TapirLink is based on the DiGIR PHP provider, but it's only compatible with TAPIR, not DiGIR. It uses the PHP ADOdb library to access different types of relational databases.

A single instance of TapirLink can provide access to multiple TAPIR resources, each one with its own address.
TapirLink allows each resource to map one or more conceptual schemas following the DarwinCore pattern, but the idea is that it will only be able to serve instances of a single "class" or "entity". In other words, when mapping multiple conceptual schemas, each mapped concept will actually refer to an "attribute" or "property" of the same underlying class.
@


1.3
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1180044373" format="1.1" version="1.3"}%
d7 2
d29 2
a30 1
   * A simple client (tapir_client.php) for testing.@


1.2
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1176157966" format="1.1" version="1.2"}%
d3 1
a3 1
*Developers:* RenatoDeGiovanni, DaveVieglais, CraigWieczorek, KevinRichards
@


1.1
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1170026618" format="1.1" version="1.1"}%
d3 1
a3 1
*Developers:* RenatoDeGiovanni
d17 1
a17 1
   * Request encoding can be KVP or XML.
d21 1
a21 1
   * Log only requests can be accepted.
d23 1
a23 1
   * Max element repetitions and max element levels.
@
