head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.7;

1.7
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.6;

1.6
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.2;

1.2
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	;


desc
@Initial revision
@


1.8
log
@Revision 8
@
text
@---+ Current Open Issues

The list of open issues being discussed right now. There are plenty of more things to discuss, but these are the ones being worked on right now.


 1 FilterEncoding. How do we represent filters in the protocol?
      * see discussion about FilterOperators
      * add SpatialOperators to work with coordinates?

   * ProtocolHeader. Do we need to address resources in the protocol? What is an AccessPoint?

   * RequestMethods. What kind of requests are needed?
      * PingRequest: do a simple 'ping' to see whether a resource is online.
      * CapabilitiesRequest: list capabilities of the respective (provider)software...
      * MetadataRequest: give human readable metadata about a provider/resource
      * SearchRequest: search is subtyped?
      * InventoryRequest: select distinct values or value arrays...
      * CountRequest: count is a seperate request or just a flag?

   * ConceptualBinding. How do we address a concept of a ConceptualSchema?

   * ResponseStructure: How to define the structure of the returned records?

   * RecordDefinition: Do we need to define a "record" for a concetpual schema? Do we need a 'root' table? 

   * ErrorCodes: Do we need to define a standard set of error codes?

   * An alternative ThirdProposal based on the SoapProtocol ?
@


1.7
log
@Revision 7
@
text
@d28 1
a28 1
   * A SOAP based protocol? See ThirdProposal
@


1.6
log
@Revision 6
@
text
@d6 2
a7 1
 1 FilterOperators
@


1.5
log
@Revision 5
@
text
@d12 3
a14 3
      * CapabilitiesRequest: capabilities and metadata are seperate requests?
      * MetadataRequest: capabilities and metadata are seperate requests?
      * ScanRequest: call it scan or inventory?
d16 10
a25 1
      * CountRequest: count is a seperate request of only a flag?
@


1.4
log
@Revision 4
@
text
@d11 1
a11 1
 *RequestMethods. What kind of requests are needed?
d17 2
@


1.3
log
@Revision 3
@
text
@d12 2
d15 1
a15 1
      * CapabilitiesRequest: capabilities and metadata are seperate requests?
a16 1
      * SearchRequest: search is subtyped?
@


1.2
log
@Revision 2
@
text
@d7 1
a7 1
      * add spatial operators to work with coordinates?
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
 1 ProtocolFeatures/FilterOperators
d9 1
a9 1
   * ProtocolFeatures/ProtocolHeader. Do we need to address resources in the protocol? What is an AccessPoint?
d11 5
a15 5
   * ProtocolFeatures/RequestMethods. What kind of requests are needed?
      * ProtocolFeatures/RequestMethods/ScanRequest: call it scan or inventory?
      * ProtocolFeatures/RequestMethods/CapabilitiesRequest: capabilities and metadata are seperate requests?
      * ProtocolFeatures/RequestMethods/CountRequest: count is a seperate request of only a flag?
      * ProtocolFeatures/RequestMethods/SearchRequest: search is subtyped?
@
