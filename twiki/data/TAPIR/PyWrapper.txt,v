head	1.12;
access;
symbols;
locks; strict;
comment	@# @;


1.12
date	2009.07.29.08.39.35;	author MarkusDoering;	state Exp;
branches;
next	1.11;

1.11
date	2007.05.23.11.55.51;	author MarkusDoering;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.20.12.41.49;	author MarkusDoering;	state Exp;
branches;
next	1.9;

1.9
date	2007.01.28.23.11.33;	author RenatoDeGiovanni;	state Exp;
branches;
next	1.8;

1.8
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.7;

1.7
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.6;

1.6
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.2;

1.2
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.09.00.00.00;	author MoinMoin;	state Exp;
branches;
next	;


desc
@Initial revision
@


1.12
log
@none
@
text
@%META:TOPICINFO{author="MarkusDoering" date="1248856775" format="1.1" version="1.12"}%
*Developers:* MarkusDoering

*Availability/Location:* source code hosted by sourceforge http://digir.svn.sourceforge.net/viewvc/digir/pywrapper/

*Language:* Python

*Documentation:* http://digir.svn.sourceforge.net/viewvc/digir/pywrapper/docs/PyWrapper%20Guide.pdf

*Description:* PyWrapper for TAPIR is not actively maintained anymore and the project site pywrapper.org has been closed, migrating all source code to the DiGIR sourceforge site. The previous BioCASe version2 branch of PyWrapper is still maintained and available from the BioCASE website: http://www.biocase.org/products/provider_software/index.shtml

The third version of the PyWrapper is an interface to databases using the TAPIR protocol. The entire TAPIR specification is supported including the processing of dynamic output models. The TAPIR protocol is mainly a XML based query language that abstracts local data(base) schemas from the semantics. By utilizing one or more agreed data standards (mostly defined with the help of XML schemas within a community) a query does not need to know the local data(base) structure, as each PyWrapper installation is configured for these standards by mapping them to the underlying datasource structure.

PyWrapper comes with a graphical web based configuration tool, some testing and querying utilities and it can read alias.txt files from a ConceptNameServer? to manage concept, models and templates in a community network. The software runs on a small python application server (CherryPy) that can be run as a standalone service (ideal to give it a fast try) or behind an Apache webserver (which is recommended for production). A LSID resolver is being integrated into the server at the moment as part of the final 3.1 release. 

The connection to the database is done by different database modules that use SQL templates. This way it is easy to build new DB modules for different DB vendors. Non SQL capable databases will not be supported. Currently only MySQL and PostgreSQL are implemented, but please get in touch with us if you require a different system.
@


1.11
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="MarkusDoering" date="1179921351" format="1.1" reprev="1.11" version="1.11"}%
d4 1
a4 1
*Availability/Location:* Available at http://trac.pywrapper.org/pywrapper/wiki/Downloads#LatestStableVersion
d8 1
a8 1
*Documentation:* http://trac.pywrapper.org/pywrapper/wiki/Documentation
d10 3
a12 1
*Description:* The third version of the PyWrapper is an interface to databases using the TAPIR protocol. The entire TAPIR specification is supported including the processing of dynamic output models. The TAPIR protocol is mainly a XML based query language that abstracts local data(base) schemas from the semantics. By utilizing one or more agreed data standards (mostly defined with the help of XML schemas within a community) a query does not need to know the local data(base) structure, as each PyWrapper installation is configured for these standards by mapping them to the underlying datasource structure.
@


1.10
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="MarkusDoering" date="1171975309" format="1.1" reprev="1.10" version="1.10"}%
d4 1
a4 1
*Availability/Location:* Available at http://www.pywrapper.org/
d10 1
a10 2
*Description (for version2, outdated!!!):* The PyWrapper software is a CGI/XML interface to a unit- level  data provider enabling an arbitrarily structured database to be linked to the  [[http://www.biocase.org][BioCASE network]]. It implements the BiocaseProtocol to understand queries and answer them in a standard XML format.  The protocol only defines the communication between the wrapper and the outside  world.
The real data itself is defined by any other schema - [[http://www.biocase.org][BioCASE]] uses [[http://www.tdwg.org/activities/abcd/][ABCD]].  The PyWrapper is generic in the way that it works with any data-bearing XML  schema, as long as it is configured by  the provider for his database. To pass a request to the wrapper use a http post  request and submit a XML document based on the protocol. Use 'query' as the  parameters name.
d12 1
a12 1
The connection to the database is done by different database modules that use SQL templates. This way it is easy to build new DB modules for different DB vendors. Non SQL capable databases will not be supported. There are a variety of DBMSs already supported by the wrapper - for a list of supported databases see the readme file.
d14 1
a14 1
The unit level PyWrapper is a object-oriented Python CGI software,  that runs on a provider's webserver. Python  is an open source software that runs on any operating systems with little installation  work. When comparing portability, database connectivity, installation overhead,  Unicode support and speed it has several advantages over other languages. A  provider's webserver has to be configured for the use of Python as a CGI.
@


1.9
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="RenatoDeGiovanni" date="1170025893" format="1.1" version="1.9"}%
d10 2
a11 2
*Description:* The PyWrapper software is a CGI/XML interface to a unit- level  data provider enabling an arbitrarily structured database to be linked to the  BioCASE network. It implements the BiocaseProtocol to understand queries and answer them in a standard XML format.  The protocol only defines the communication between the wrapper and the outside  world.
The real data itself is defined by any other schema - BioCASE uses ABCD.  The PyWrapper is generic in the way that it works with any data-bearing XML  schema, as long as it is configured by  the provider for his database. To pass a request to the wrapper use a http post  request and submit a XML document based on the protocol. Use 'query' as the  parameters name.
@


1.8
log
@Revision 8
@
text
@d1 15
a15 16
/!\ There is now also a*TAPIR PyWrapper* available at http://ww3.bgbm.org/tapir/FrontPage

*Developers:* MarkusDoering

*Availability/Location:* Available at http://www.pywrapper.org/

*Language:* Python

*Documentation:* http://trac.pywrapper.org/pywrapper/wiki/Documentation

*Description:* The PyWrapper software is a CGI/XML interface to a unit- level  data provider enabling an arbitrarily structured database to be linked to the  BioCASE network. It implements the BiocaseProtocol to understand queries and answer them in a standard XML format.  The protocol only defines the communication between the wrapper and the outside  world.
The real data itself is defined by any other schema - BioCASE uses ABCD.  The PyWrapper is generic in the way that it works with any data-bearing XML  schema, as long as it is configured by  the provider for his database. To pass a request to the wrapper use a http post  request and submit a XML document based on the protocol. Use 'query' as the  parameters name.

The connection to the database is done by different database modules that use SQL templates. This way it is easy to build new DB modules for different DB vendors. Non SQL capable databases will not be supported. There are a variety of DBMSs already supported by the wrapper - for a list of supported databases see the readme file.

The unit level PyWrapper is a object-oriented Python CGI software,  that runs on a provider's webserver. Python  is an open source software that runs on any operating systems with little installation  work. When comparing portability, database connectivity, installation overhead,  Unicode support and speed it has several advantages over other languages. A  provider's webserver has to be configured for the use of Python as a CGI.
@


1.7
log
@Revision 7
@
text
@d5 1
a5 1
*Availability/Location:* Available at http://ww3.bgbm.org/bps2/
d9 1
a9 1
*Documentation:* http://ww3.bgbm.org/bps2/DocumentationToc
@


1.6
log
@Revision 6
@
text
@d1 1
a1 1
/!\ There is now also a TAPIR PyWrapper available at http://ww3.bgbm.org/tapir/FrontPage
@


1.5
log
@Revision 5
@
text
@d1 3
a3 1
*Developers:* MarkusDoering PyWrapper!\There is now also a TAPIR PyWrapper available at http://ww3.bgbm.org/tapir/FrontPage
@


1.4
log
@Revision 4
@
text
@d1 1
a1 1
*Developers:* MarkusDoering
d3 1
a3 1
*Availability/Location:* Available from the BioCASE developer site http://www.biocase.org/dev/wrapper/#download 
d7 1
a7 1
*Documentation:* http://www.biocase.org/dev/wrapper/#doc 
@


1.3
log
@Revision 3
@
text
@d3 1
a3 1
*Availability/Location:* Available from the BioCASE site http://www.biocase.org/dev/wrapper/#download 
d9 1
a9 1
*Description:* The PyWrapper software is a CGI/XML interface to a unit- level  data provider enabling an arbitrarily structured database to be linked to the  BioCASE network. It implements the BioCASE protocol to understand queries and answer them in a standard XML format.  The protocol only defines the communication between the wrapper and the outside  world.
@


1.2
log
@Revision 2
@
text
@d7 1
a7 1
*Documentation:* http://www.biocase.org/dev/wrapper/
d9 6
a14 1
*Description:* Component responsible for connecting local databases in DiGIR networks. Receives DiGIR requests, translates it to a query to be performed in the local database, and returns a DiGIR response containing the requested data.
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
*Availability/Location:* Available from the BioCASE site http://www.biocase.org/dev/wrapper#download .
@
