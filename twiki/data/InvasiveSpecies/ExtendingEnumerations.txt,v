head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2006.03.02.05.28.49;	author BobMorris;	state Exp;
branches;
next	;


desc
@none
@


1.1
log
@none
@
text
@%META:TOPICINFO{author="BobMorris" date="1141277329" format="1.0" version="1.1"}%
%META:TOPICPARENT{name="RevisedSchema"}%
---+	%TOPIC%

In the original XML schema there is a notion of "External schema" to represent external terminologies when a data provider insists on using something other than a defined enumeration. In the original it was just a !URI, and there really was no way to compare the external strings to local enumerations. In Agadir0.9 there is a chaotic hint, not uniformly treated, of the following idea I am experimenting with to give external vocabularies a hope of working short of describing everything in RDF internally and externally, a solution I believe is overkill in this application. The idea is this: where-ever a provider gets to insist on an external vocabulary there will be several resources: (a)a string comprising the value of the item from the external vocabulary (b)a !URI or GUID by the resolution of which a sufficiently determined application can acquire a list of strings that can be compared, at least as to equality, with those of the enumeration that is locally defined in the schema. This almost certainly requires programming in a language supporting cass reflection because the application has to  examine the class, not the instance, to get the enumeration. Java, C#, and PHP all have a reflection API, and I believe Python also has something that will solve the problem. I greatly desire opinions of this idea or discussion of simpler alternatives,  in this topic

-- Main.BobMorris - 02 Mar 2006

---

@
